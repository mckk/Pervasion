<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1fc3b032d8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1fc3943618"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1fc3943618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1fc3ae9278"/></to>
    </wire>
    <wire loc="22:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc3b0fc38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b52ab8"/></to>
    </wire>
    <wire loc="25:BlinkAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b1fc3b0aad0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b6cb00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b6cb00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b9ec48"/></to>
    </wire>
    <wire loc="26:BlinkAppC.nc">
      <from><interface-ref name="DataPacket" scoped="" ref="0x2b1fc3b16550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc478d020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc478d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3b7ddf0"/></to>
    </wire>
    <wire loc="27:BlinkAppC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x2b1fc3b23a10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc478e390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc478e390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc50993e0"/></to>
    </wire>
    <wire loc="28:BlinkAppC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x2b1fc3b201a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc4782490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc4782490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc3b7fc38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:BlinkAppC.nc">
      <from><interface-ref name="SerialAMControl" scoped="" ref="0x2b1fc3b208f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc477c240"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc477c240"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc47f0728"/></to>
    </wire>
    <wire loc="32:BlinkAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x2b1fc3b17530"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc4b38d88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc4b38d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc47798d8"/></to>
    </wire>
    <wire loc="33:BlinkAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x2b1fc3b24390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc4b381d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc4b381d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc51cb600"/></to>
    </wire>
    <wire loc="34:BlinkAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x2b1fc3b1d0e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc4b2c220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc4b2c220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc4779300"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b1fc49b6788"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b1fc49b1688"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc497c120"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc47f0110"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc46a1cb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc467be80"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4655a28"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc44c6518"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc43fe638"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4349348"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3d78248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4f4b1a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4136438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3ce7020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b1fc3ae98b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b1fc380c600"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b1fc380c600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b1fc38c1b48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc3ae8398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc394d8e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc394d8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3951020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3ae8a60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1fc394b508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4adbbc8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1fc394b508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3ef5190"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc3947790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc3acd650"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b1fc3951d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3acd020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b1fc39516c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3b71d90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b1fc39516c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc3953680"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc3953680"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc39620e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1fc3953d10"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b1fc394b508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b1fc3969388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b1fc396ee00"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b1fc396ee00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc39e9740"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1fc39614f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b1fc3953d10"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b1fc399a968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc3a7a970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b1fc39844d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a19020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a19020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c91710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b1fc39984d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a2cd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a2cd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d39710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b1fc399f1a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a415b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a415b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d8f710"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b1fc396b1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc39f8a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc39f8a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4b9ea10"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b1fc3992e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a312a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a312a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d95710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b1fc39774d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc39f1bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc39f1bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bfa970"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b1fc397c658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a03740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a03740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c40710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b1fc3981968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a16430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a16430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ce4710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b1fc3995968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a28120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a28120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d2f710"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b1fc3963968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc39ed2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc39ed2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4baea10"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b1fc3974968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc39fe020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc39fe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bf1970"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b1fc3979af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a12bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a12bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c36710"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b1fc398de00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a248c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a248c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4cda710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b1fc399c658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a3ea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a3ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d85710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b1fc39a6348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc3a93020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b1fc398a1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a2fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a2fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d3f710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc39e9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ba4a10"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b1fc3980020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc39fb430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc39fb430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4be7970"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b1fc39a8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc3a8aab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b1fc397e348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a05500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a05500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c466a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b1fc3983658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a18120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a18120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c8e710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b1fc3997658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a2be18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a2be18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d36710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b1fc399e348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a40740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a40740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d8c710"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b1fc396a348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc39f7bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc39f7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4b9ba10"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b1fc3976658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a01d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a01d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bf7970"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b1fc397b7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a148c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a148c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c3d710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b1fc3990af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a155b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a155b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ce0710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b1fc3994af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a272a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a272a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d2c710"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b1fc3970af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc39ec430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc39ec430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4baba10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b1fc3973af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc39fd120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc39fd120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bed970"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b1fc3988c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a11d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a11d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c8d710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b1fc399b7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a3dbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a3dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d82710"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b1fc3985020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1be40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1be40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c946a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b1fc3989348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a2ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a2ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d3c710"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b1fc39a0020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a30430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a30430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d92710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b1fc39a54d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc3a8f180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b1fc396c020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc39f98c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc39f98c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ba1a10"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b1fc397f1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc39fa5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc39fa5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4be4970"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b1fc3993c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a321e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a321e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d986a8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b1fc397d4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a045b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a045b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c43710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b1fc39827e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a172a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a172a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ce7710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b1fc39967e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a29020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a29020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d32710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b1fc399d4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a3f8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a3f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d89710"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b1fc39567d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc39ee1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc39ee1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4b509d8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b1fc39757e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a00e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a00e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bf4970"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b1fc397a968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a13a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a13a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c39710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b1fc398fc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a25740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a25740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4cdd710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b1fc39a71a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc3a85c38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b1fc398b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1e930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4d426a8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b1fc3987e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a10e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a10e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4c8a710"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b1fc396fc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1fc39eb5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1fc39eb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4ba7a10"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b1fc3972e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1fc39fc2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1fc39fc2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1fc4bea970"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc38c0b08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b1fc38be020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b1fc3815dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1fc38e52b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1fc3deb790"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc3b71d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3b524f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b1fc3b501b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b1fc3b74988"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b1fc3b74988"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b1fc3970af0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b1fc3b4f338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b1fc3b73b20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b1fc3b73b20"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b1fc3963968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b1fc3b4e4c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b1fc3b72ca8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b1fc3b72ca8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b1fc39567d0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b9ec48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc46e8da0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b80aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b9bc30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b9bc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc3bcab20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1fc3b7d818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1fc3b99968"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1fc3b99968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1fc3be0818"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc3b7ddf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3baf5b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc3baf5b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3bde430"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc3ba3710"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc4475808"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc4475808"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc44a2218"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc3b7fc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc3b9adc0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc3b9adc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc3bc9c38"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3b95a80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3bad1c0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3bad1c0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b1fc4477ba0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3bb0020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3bb0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3be0e08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc3ba2670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc4471670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc4471670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc449e130"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc46e8da0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b1fc46e5d28"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3bab020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3bdb1c8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b1fc3bbe020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1fc3bdc5b0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3ba7670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc446c918"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc3bc3a60"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc46a58f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc46a58f8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc46e1170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b1fc4477ba0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b1fc44a5540"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1fc3bce418"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b1fc46cac40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1fc46cac40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b1fc4709080"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc3bba170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc4476df8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc4476df8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc44a37f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b1fc46e5d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3c6e880"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3c6e880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3c682c8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc3be7320"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc463fa08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc463fa08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc467b298"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc4680838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc46ca020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc46ca020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c99c0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c99c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc46a8660"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc46a8660"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1fc46e6838"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc46e6838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc4663a48"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc4663a48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc46c0020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c44e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc3c6d460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc3c6d460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc3c68d68"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc3bd9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc46a52b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc46a52b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46e5668"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46e5668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc4681d20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc4681d20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc46a1020"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc4662b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc46c5748"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc46c5748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc46c0c20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46c5e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc3c6c108"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc3c6c108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc44029b0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc3c05640"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc42e4d30"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3bd9638"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc3be3a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc44a3020"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3bf1ba8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3cd6d90"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3cd6d90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3ce6328"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b1fc3bf0390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3c6c760"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3c6c760"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3c67a18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc44029b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc43fdde8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc3c7bbd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc3cd6118"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc3cd6118"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc3ce7650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3c75d00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3cd4a38"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3cd4a38"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3ce4020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b1fc3c726b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc42fe330"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b1fc3c726b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc4405838"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1fc4405838"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc43fec78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1fc42fe330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc4349988"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b1fc3c73020"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b1fc42feae0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b1fc42feae0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc4348220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b1fc3c73d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc42fd780"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc42fd780"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc4347020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3c85de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc3c83938"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1fc3c86020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1fc4659530"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1fc4659530"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1fc4651320"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b1fc3c98b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc465a978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b1fc465a978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc3c867b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b1fc3c936e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b1fc3c94810"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b1fc3c95450"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b1fc3cebd28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b1fc3ce3308"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b1fc3cf7ac8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b1fc3d78bc0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b1fc3d78bc0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc3d919e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b1fc3cf5ab0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b1fc3fc2de0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b1fc3fc2de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b1fc39774d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b1fc3cf3ca8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b1fc3fbe338"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b1fc3fbe338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b1fc396b1a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b1fc3cf2e30"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b1fc3fe4648"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b1fc3fe4648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b1fc396c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b1fc3d0a4e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b1fc3fdaa60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b1fc3fdaa60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b1fc408c420"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1fc3cfdbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc42a27d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc42a27d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc3cfe020"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b1fc429f020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc429f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc3cfe6f8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc429e2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc429e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc3cfd500"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42a03a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42a03a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc3cfede8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc429e900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc429e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc3d01280"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc4295e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc4295e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc3d01bf0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42c7d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42c7d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc3d09540"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42c6528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42c6528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc3d09dc8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc4299470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc4299470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc3d046a8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc4299c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc4299c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc3d05df8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b1fc42c1470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc42c1470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc3d00020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc4295470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc4295470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc3d00880"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b1fc4298470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc4298470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b1fc3d199e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc42b7cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc42b7cd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b1fc3cfc9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc42cd5d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc42cd5d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc3cef080"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc42e4d30"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b1fc3d0f720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b1fc3d108d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc3d78248"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3fc6928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc3fc6928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc3fcca58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1fc3d919e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4ea0530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1fc4ea0530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e94830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b1fc4e8ece8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e999e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e999e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e83020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc4e90ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc3f3bd70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc3f3bd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc3f6f0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b1fc4e800a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3d9b020"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc3d9b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3e39490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b1fc4e7b128"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1fc3db9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3dad0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3e55568"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b1fc3dbdb68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1fc3e54ca0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc3db9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b1fc3e4f540"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc3db9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b1fc3e4b8e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc3db9020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b1fc3e6ab88"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b1fc3e65020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3de1950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3de1950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3df0558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc3dd7470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc3de9020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc3dc7980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1fc3dee670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc3dd0d90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3dd5400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc3ef58b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3d9b020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b1fc3f942b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc3f39ad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc3f39ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc3f57a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc3f6bb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3d9b020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b1fc3fc0020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b1fc397f1a0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b1fc3fbf198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b1fc3995968"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b1fc3d79c88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b1fc398fc78"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b1fc3fbd4b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b1fc3981968"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b1fc3fd6e80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1fc3fd3020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b1fc3fd9710"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b1fc3fe56f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b1fc3fd3bd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1fc3dbdb68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b1fc400d2e8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b1fc401c020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b1fc401c020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc4072970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b1fc408b020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b1fc3d79c88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b1fc4022208"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc405d7a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b1fc401e020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc4051cd8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b1fc401b020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc406e6a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b1fc40210f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc40593e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b1fc401d020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc40769d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b1fc3ff9370"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc4049a70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b1fc4020020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b1fc4054020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4060908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b1fc40143e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc405c5f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b1fc4014b18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc40582e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b1fc4016280"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4054de0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b1fc40169b8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4050b10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b1fc4015148"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4075908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b1fc4015880"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4071780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b1fc4013020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc406d5f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b1fc4013758"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b1fc40898e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42bf908"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42a09b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42c8d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42c75c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc429fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42c0470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc4296470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2b1fc42c3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42a1430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40cede8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc429c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc429cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc429b3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc4298c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2b1fc42c3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42c1c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42c6cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc42a1d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2b1fc429ac50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc4296c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42c0c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42c85f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc429b9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2b1fc429a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42c2c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc429c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42c2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc429f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2b1fc429a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42c54f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42c5c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40c9e50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40c7040"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40c7d40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40cbc10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40c6a98"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b1fc40c1838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc413f978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b1fc413f978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1fc40c41e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc428a638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc428a638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc42661e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b1fc40c3d08"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b1fc42892a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b1fc42892a8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b1fc4148a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc40c1020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4289880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4289880"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4144080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc40c0730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b1fc40e15d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc4134020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4144080"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc416d4a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b1fc4148a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b1fc4140e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc428a060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4148400"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc4148400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4140898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x2b1fc4265020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc4144d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x2b1fc4265c90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b1fc39774d0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc4144d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc416c1c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b1fc417f888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc4270200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc4270200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc4f49590"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc417ace0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc426f760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc426f760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc4f48ac8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b1fc41805a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b1fc41cb6d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b1fc41cb6d8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b1fc41c35e0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc417c4f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc38db240"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b1fc4193830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b1fc41b9af8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc38db240"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b1fc41bf508"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b1fc39774d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b1fc41be648"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b1fc3976658"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b1fc41bb7d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b1fc39757e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b1fc41ba958"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b1fc3974968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b1fc426f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b1fc4f48388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1fc4f473e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1fc426e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b1fc4f47b68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b1fc4f4b780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b1fc4f46780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc42dea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42d2100"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42b3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc42e1a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42db470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42dbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc42b22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42d4c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc42e0a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc42dfa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42da470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2b1fc42d8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42b5948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc42b1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc42af2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc42afa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc42b1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc42df2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc42e02e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42b4900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2b1fc42d6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42d4470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42d9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc42b42e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2b1fc42e12e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc42de2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42d3470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42dac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc42dc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc42b3638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42dcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc42e2060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2b1fc42e2c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc42d5c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42d5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc42b1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42d6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc42b3c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc42b2900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2b1fc42e2678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42d9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42d8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc42f4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42e9908"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42ca900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc42f7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42f2d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42f15c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc42c9c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42ea470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc42f6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc42f5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42f1d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2b1fc42ee470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42cc2a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc42fb638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc42fbc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc42fa3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc42fc900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc42f6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc42f7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42ca2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2b1fc42eec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42ebc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42f0cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc42ccbd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2b1fc42f8c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc42f5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42eac10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42f0528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc42f4e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc42c9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42f25f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc42fa9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2b1fc42f8638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc42eb470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42edc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc42fb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42ed470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc42c9638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc42fc2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2b1fc42f8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42ef4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42efc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b1fc4331410"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b1fc4346020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b1fc4331b18"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b1fc4346768"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b1fc4345140"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b1fc3d78bc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b1fc433a0e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b1fc3d79c88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b1fc4369368"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b1fc3fc2de0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b1fc43684f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b1fc3fbd4b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b1fc433b548"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b1fc3fd6e80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1fc43676c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc43eb140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc43eb140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc43664c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc43ebd38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc43ebd38"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc4364e10"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b1fc43e96b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc43e96b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc4363528"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b1fc43e7020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc43e7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc4363c18"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc43e7638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc43e7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc43623c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc43e5020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc43e5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc43645c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc43e0cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc43e0cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc4365020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc440c470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc440c470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc4365d20"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc440d020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc440d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc4362ac0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc43e15c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc43e15c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc435ce10"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc4402080"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc4402080"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc43fd4b8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4341280"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4341d98"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1fc43408c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc4475808"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc436a850"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc446d190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc446d190"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc449cbd0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc435f770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc43dfc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b1fc43e8368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc43e2dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc43dc7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b1fc43db020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc43e1d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc43db7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2b1fc4411020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc43e5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc43e5d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc43e62e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc43e0528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc43e9cc8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2b1fc44117c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc440e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc44137c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2b1fc43e2638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc43df4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc440d7c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc4413020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc43de838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc43e8980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc43dc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc43e33a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2b1fc43e2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc440e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc440f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc43e6900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc440f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc43e7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2b1fc43e39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc4412020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b1fc44127c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b1fc4401158"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b1fc43fb578"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc4427480"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b1fc43fbc10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b1fc3fc2de0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b1fc43fae30"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b1fc3fc0020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b1fc43f8020"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b1fc3fbf198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b1fc43f7238"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b1fc3fd9710"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1fc43f7db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc460a0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b1fc460a0c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc4430b00"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc46367c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc46367c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc442e020"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc4605900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc4605900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc442f830"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b1fc4604638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b1fc4604638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc442e778"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc442d350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1fc442b9f8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc4475808"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc442db30"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3cd6d90"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b1fc441b2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc449a7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3baf5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc44d4e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc3f3bd70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b1fc4496a50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1fc44d5c38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1fc4498ce8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1fc44f0c08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1fc44f0c08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1fc45ebc38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc44f3a98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc45f80c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc44c6518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc44ea2c0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc44ea2c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc45737d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b1fc45f25a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc4584290"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1fc457f648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1fc44eac38"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1fc44eac38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4572020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc45eae48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b1fc44e50f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b1fc44e50f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc456e128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc456e128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4ff3a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc45737d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4ff7140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1fc4572020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1fc4ff78e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc4ff1b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc3dd0d90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc5056b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3de1950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc5055b58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1fc3dc7980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc5051bb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc3dd7470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b1fc45bb5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b1fc45ed618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc45e2420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc461a7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc461a7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc44f3a98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc45fec90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc4634470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b1fc46082e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc4602dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc463e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b1fc463d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc4607638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc4636020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b1fc4600d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc45ffcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc463d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2b1fc4639020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc460acb8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc4604020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc4604d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc46052e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc45ff528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc46005c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc4609c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2b1fc46397c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc46377c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc463c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b1fc4609678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2b1fc4602638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc45fe4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc463c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc45fd838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b1fc4608900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc463e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc46033a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2b1fc4602020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b1fc4637020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc46387c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc4638020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b1fc4607020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc4607c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2b1fc46039b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc463a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b1fc463a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b1fc46564c0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b1fc46522b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc465c738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc4655a28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc467a578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1fc4680838"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b1fc46792a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc467c2b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b1fc467c2b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1fc4678080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1fc4659530"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4678848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b1fc4662418"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b1fc46a16e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46a0458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1fc4662b20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc46a0a98"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc46bd020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c44e8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46bdcc8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46c5e50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc46bc390"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b1fc46e7928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc46e3e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b1fc46e3e38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc4709d98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3b95a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc478dbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2b1fc478b2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3b95a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc5098020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc47129a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc5098bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc47129a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc4755b98"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc4754a08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b80aa8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4753700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc4799d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3b7ddf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x2b1fc4798988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b1fc4797160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc4782a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc3b7ddf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4781700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1fc47f0728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1fc47e7cf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc477b1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc47ba460"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc47798d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc47f8d20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc4779300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc47f9180"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc4777c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc47f7908"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47f9738"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1fc47f0110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1fc47e76e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc47ec8f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc4776608"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1fc47f6308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc47ee208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1fc47f5020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc47ef760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1fc47ec020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b1fc4b106e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc47ee208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc491e6f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1fc47ef760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1fc491e020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b1fc491d5b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1fc47ec020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc4826bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc47ec8f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc491a268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc47ec8f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1fc4912bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1fc47ec8f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1fc491de78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1fc4824b48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b1fc491b750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b1fc4827898"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1fc481eb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1fc4914328"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b1fc481d398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc4916c70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1fc4916c70"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc493a7f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1fc4957c98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1fc493c498"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1fc493c498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1fc49347e8"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b1fc485f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b1fc484a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b1fc4861020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b1fc485b0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b1fc4919908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b1fc4918100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b1fc4936738"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b1fc4934020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b1fc4934020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b1fc497ce58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1fc49347e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1fc498a5f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1fc493a7f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1fc497c6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc4981a30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4a48a68"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc4a48a68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4b1da60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc4987c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4981a30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b1fc49895f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1fc49bb190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1fc49bb190"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1fc49b3020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b1fc4989d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1fc49bb9e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1fc49bb9e8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1fc49b38b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b1fc49885c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b1fc49ba388"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b1fc49ba388"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b1fc49b2158"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b1fc49b8930"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b1fc49af020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1fc49b9848"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1fc49b1d98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1fc49b80f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1fc49b06b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc49ae4c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc3947790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc49ad1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc38db240"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b1fc4b1ac80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4a427d8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1fc4a427d8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1fc4ad3ce0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc4ad0020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc4a3a538"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc4a3a538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc4a2a7a8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc4a355d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc4a75838"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b1fc4a34ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1fc4a72020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc4a2fa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b1fc4a6f938"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc4a2fa20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b1fc4a6bbf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1fc4a2fa20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b1fc4a66020"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1fc4ada3f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1fc4a3a538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b369d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2b1fc4b340a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc4777c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc51ca2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc4b48440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc51cae80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1fc4b48440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1fc4b45d20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1fc4b44ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1fc477b1c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b43700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc4b42d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc47798d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x2b1fc4b41988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b1fc4b40160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2b1fc4b2c7b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1fc47798d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b2b3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.0/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="8:BlinkC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.0/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b1fc38b9650"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.0/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.16 $ $Date: 2008/07/25 16:27:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1fc451c020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkAppC.DataSender" loc="39(BlinkAppC.DataSender):/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.DataSender.AMQueueEntryP" loc="35(BlinkAppC.DataSender.AMQueueEntryP):/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.DataReceiver" loc="35(BlinkAppC.DataReceiver):/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TThree" ref="0x2b1fc38b9218"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1fc3881178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TThree" ref="0x2b1fc38b9218"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b1fc38b9aa0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkAppC.SerialSender" loc="39(BlinkAppC.SerialSender):/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.SerialSender.AMQueueEntryP" loc="35(BlinkAppC.SerialSender.AMQueueEntryP):/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.SerialReceiver" loc="35(BlinkAppC.SerialReceiver):/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1fc39a1748" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1fc39a1a90" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1fc39a1dd8" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1fc39b1020" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1fc39b1388" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1fc39b16f0" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b1fc39b1a20" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1fc3a46020" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1fc3a46388" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1fc3a466f0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b1fc3a46a20" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b1fc3ef41f8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3ef41f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b1fc3ef4548" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b1fc3ef9a20" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b1fc3ef9a20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b1fc3f06198" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3f06198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b1fc3f06498" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b1fc3f59e28" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b1fc3f59e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b1fc3f565c8" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3f565c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b1fc3f61708" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b1fc3f61708"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b1fc3f61e70" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b1fc3f61e70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b1fc3f60260" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b1fc3f60260"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b1fc3f609d8" loc="47:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b1fc3f609d8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b1fc3f60d80" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b1fc3f5f5d0" loc="49:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b1fc3f5f5d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b1fc3f8e4d8" loc="41:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b1fc3f8e4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b1fc3f8ec40" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b1fc3f8ec40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b1fc3f8d068" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b1fc3f8d068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b1fc3f8d7e0" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b1fc3f8d7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b1fc3f8db88" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b1fc404c7e0" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b1fc404cb48" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b1fc4048020" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b1fc4048350" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.0/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b1fc4201578" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b1fc4228510" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc44d34b0" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc44d34b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b1fc451c020" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1fc451c020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b1fc451c310" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b1fc4514720" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1fc4514720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b1fc4514a10" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc4569300" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc4569300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc45b9698" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc45b9698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b1fc45b99a8" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b1fc472c348" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b1fc4728e20" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b1fc470ebc8" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b1fc4786398" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.0/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b1fc4b00c10" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b1fc4b30268" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b1fc3942a30" loc="47:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3942a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3942d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b1fc3943618" loc="46:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1fc3943618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1fc3943968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1fc394b508" loc="43:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1fc394b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc394b858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc394d8e8" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc394d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc394dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b1fc3947790" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc3947790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1fc3947ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1fc3947c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1fc3947df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1fc394b020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1fc394b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b1fc39516c0" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b1fc39516c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3951a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3951020" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3951020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3951370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b1fc3951d88" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b1fc3951d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3950170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1fc3953d10" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1fc3953d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc39570a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1fc3953680" loc="17:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc3953680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc39539d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1fc39614f8" loc="22:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1fc39614f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3961848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b1fc3969388" loc="21:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b1fc3969388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39696d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3969860"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39699e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3969b70"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3969cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3969e80"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3961030"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39611b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1fc39620e0" loc="20:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc39620e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3962430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b1fc399a968" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b1fc399a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39990f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3999278"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3999400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3999588"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3999710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3999898"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3999a20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3999ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b1fc39844d0" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b1fc39844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3984820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39849a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3984b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3984cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3984e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3983020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39831a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3983330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b1fc39984d0" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b1fc39984d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3998820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39989a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3998b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3998cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3998e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3997020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3997330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b1fc399f1a0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b1fc399f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc399f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc399f678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc399f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc399f988"/>
        <function-ref name="get" scoped="" ref="0x2b1fc399fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc399fc98"/>
        <function-ref name="set" scoped="" ref="0x2b1fc399fe20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc399e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b1fc396b1a0" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b1fc396b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc396b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396b678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396b988"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396bc98"/>
        <function-ref name="set" scoped="" ref="0x2b1fc396be20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc396a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b1fc3992e00" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b1fc3992e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39911a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3991330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39914b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3991640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39917c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3991950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3991ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3991c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b1fc39774d0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b1fc39774d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3977820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39779a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3977b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3977cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3977e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3976020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3976330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b1fc397c658" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b1fc397c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc397ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc397ce40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc397b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc397b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc397b330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc397b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b1fc3981968" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b1fc3981968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3981cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3981e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3990020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39901a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3990330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39904b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3990640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b1fc3995968" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b1fc3995968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3995cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3995e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3994020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39941a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3994330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39944b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3994640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b1fc3963968" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b1fc3963968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3963cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3963e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3970020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39701a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3970330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39704b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3970640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b1fc3974968" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b1fc3974968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3974cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3974e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3973020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39731a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3973330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39734b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3973640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b1fc3979af0" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b1fc3979af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3979e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3988020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3988330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3988640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39887c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3988950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b1fc398de00" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b1fc398de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc398c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc398c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc398c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc398c640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc398c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc398c950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc398cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc398cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b1fc399c658" loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b1fc399c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc399c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc399cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc399ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc399ce40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc399b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc399b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc399b330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc399b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b1fc39a6348" loc="94:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b1fc39a6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39a6698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39a6820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39a69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39a6b30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39a6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39a6e40"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39a5020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b1fc398a1a0" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b1fc398a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc398a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc398a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc398a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc398a988"/>
        <function-ref name="get" scoped="" ref="0x2b1fc398ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc398ac98"/>
        <function-ref name="set" scoped="" ref="0x2b1fc398ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b1fc396ee00" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b1fc396ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc396d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396d640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396d950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc396dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc396dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b1fc3980020" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b1fc3980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3980370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39804f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3980680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3980808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3980990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3980b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3980ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3980e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b1fc39a8020" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b1fc39a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39a8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39a84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39a8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39a8808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39a8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39a8b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39a8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39a8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b1fc397e348" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b1fc397e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397e698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397e820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc397e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc397eb30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc397ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc397ee40"/>
        <function-ref name="set" scoped="" ref="0x2b1fc397d020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc397d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b1fc3983658" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b1fc3983658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39839a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3983b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3983cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3983e40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3982020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39821a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3982330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b1fc3997658" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b1fc3997658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39979a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3997b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3997cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3997e40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3996020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39961a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3996330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b1fc399e348" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b1fc399e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc399e698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc399e820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc399e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc399eb30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc399ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc399ee40"/>
        <function-ref name="set" scoped="" ref="0x2b1fc399d020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc399d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b1fc396a348" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b1fc396a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc396a698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396a820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396ab30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396ae40"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3977020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b1fc3976658" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b1fc3976658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39769a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3976b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3976cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3976e40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3975020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39751a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3975330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b1fc397b7e0" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b1fc397b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc397be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc397a020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc397a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc397a330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc397a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc397a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b1fc3990af0" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b1fc3990af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3990e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc398f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc398f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc398f330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc398f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc398f640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc398f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc398f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b1fc3994af0" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b1fc3994af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3994e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3993020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3993330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3993640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39937c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3993950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b1fc3970af0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b1fc3970af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3970e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396f330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396f640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc396f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc396f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b1fc3973af0" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b1fc3973af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3972020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39721a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3972330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39724b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3972640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39727c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3972950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3972ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b1fc3988c78" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b1fc3988c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3987020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39871a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3987330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39874b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3987640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39877c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3987950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3987ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b1fc399b7e0" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b1fc399b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc399bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc399bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc399be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc399a020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc399a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc399a330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc399a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc399a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b1fc3985020" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b1fc3985020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3985570"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39856f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3985880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3985a08"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3985b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3985d18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3984020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b1fc3989348" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b1fc3989348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3989698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3989820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3989b30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3989cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3989e40"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3998020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b1fc39a0020" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b1fc39a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39a0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39a04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39a0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39a0808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39a0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39a0b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39a0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39a0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b1fc39a54d0" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b1fc39a54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39a5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39a59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39a5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39a5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39a5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39a4020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b1fc396c020" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b1fc396c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc396c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396c808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396cb18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc396cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc396ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b1fc397f1a0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b1fc397f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397f678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc397f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc397f988"/>
        <function-ref name="get" scoped="" ref="0x2b1fc397fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc397fc98"/>
        <function-ref name="set" scoped="" ref="0x2b1fc397fe20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc397e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b1fc3993c78" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b1fc3993c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3992020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39921a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3992330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39924b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3992640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39927c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3992950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3992ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b1fc397d4d0" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b1fc397d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc397db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc397dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc397de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc397c020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc397c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc397c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b1fc39827e0" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b1fc39827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3982b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3982cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3982e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3981020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3981330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3981640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b1fc39967e0" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b1fc39967e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3996b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3996cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3996e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3995020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3995330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39954b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3995640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b1fc399d4d0" loc="87:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b1fc399d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc399d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc399d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc399db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc399dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc399de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc399c020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc399c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc399c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b1fc39567d0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b1fc39567d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3956b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3956ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3956e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3963020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3963330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39634b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3963640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b1fc39757e0" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b1fc39757e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3975b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3975cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3975e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3974020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3974330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3974640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b1fc397a968" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b1fc397a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc397acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc397ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3979020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39791a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3979330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39794b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3979640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b1fc398fc78" loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b1fc398fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc398d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc398d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc398d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc398d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc398d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc398d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc398d950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc398dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b1fc39a71a0" loc="93:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b1fc39a71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39a74f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39a7678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39a7800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39a7988"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39a7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39a7c98"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39a7e20"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b1fc398b020" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b1fc398b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc398b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc398b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc398b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc398b808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc398b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc398bb18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc398bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc398be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b1fc3987e00" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b1fc3987e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39861a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3986330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39864b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3986640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39867c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3986950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3986ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3986c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b1fc396fc78" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b1fc396fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc396e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc396e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc396e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc396e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc396e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc396e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc396e950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc396ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b1fc3972e00" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b1fc3972e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39711a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3971330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3971640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3971950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3971ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3971c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc39ec430" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc39ec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39ec780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39ec908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39eca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39ecc18"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39ecda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39eb020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39eb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39eb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc39f98c8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc39f98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39f9c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39f9da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39f81a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39f8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39f84b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39f8640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc39ee1e8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc39ee1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39ee538"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39ee6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39ee848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39ee9d0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39eeb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39eece0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39eee68"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc39eb5b8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc39eb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39eb908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39eba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39ebc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39ebda0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39e91a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39e9330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39e94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc39f8a50" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc39f8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39f8da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39f7330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39f7640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39f77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc39ed2a8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc39ed2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39ed5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39ed780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39ed908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39eda90"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39edc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39edda0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39ec020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc39e9740" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc39e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39e9a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39e9c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39e9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39f9020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39f9330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc39f7bd8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc39f7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39f6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39f61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39f6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39f64b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39f6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39f67c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39f6950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4b509d8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4b509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4b50d28"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4b4f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4b4f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4b4f330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4b4f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4b4f640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4b4f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4b4f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4baea10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4baea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4baed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bad020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bad330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bad640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bad7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4baba10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4baba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4babd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ba9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ba91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ba9330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ba94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ba9640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ba97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ba9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ba7a10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ba7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ba7d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ba6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ba61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ba6330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ba64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ba6640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ba67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ba6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ba4a10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ba4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ba4d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ba3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ba31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ba3330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ba34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ba3640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ba37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ba3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ba1a10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ba1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ba1d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ba0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ba01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ba0330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ba04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ba0640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ba07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ba0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4b9ea10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4b9ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4b9ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4b9d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4b9d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4b9d330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4b9d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4b9d640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4b9d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4b9d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4b9ba10" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4b9ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4b9bd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4b9a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4b9a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4b9a330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4b9a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4b9a640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4b9a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4b9a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc3a00e18" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a00e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39ff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39ff330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39ff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39ff640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39ff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39ff950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39ffad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc39fc2a8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc39fc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39fc5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39fc780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39fc908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39fca90"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39fcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39fcda0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39fb020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39fb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc39f1bd0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc39f1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a01020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a011a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a01330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a014b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a01640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a017c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a01950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a01ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc39fe020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc39fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39fe370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39fe4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39fe680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39fe808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39fe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39feb18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39feca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39fee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc39fb430" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc39fb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39fb780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39fb908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39fba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39fbc18"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39fbda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39fa020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc3a01d60" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a01d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a000d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a00260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a003e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a00570"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a006f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a00880"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a00a08"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a00b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc39fd120" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc39fd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39fd470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39fd5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39fd780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39fd908"/>
        <function-ref name="get" scoped="" ref="0x2b1fc39fda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc39fdc18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc39fdda0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc39fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc39fa5b8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc39fa5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc39fa908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc39faa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc39fac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc39fada0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a0b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a0b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a0b330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a0b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bfa970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bfa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4bfacc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bfae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bf9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bf91a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bf9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bf94b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bf9640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bf97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bf7970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bf7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4bf7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bf7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bf6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bf61a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bf6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bf64b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bf6640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bf67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bf4970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bf4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4bf4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bf4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bf3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bf31a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bf3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bf34b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bf3640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bf37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bf1970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bf1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4bf1cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bf1e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bef020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bef1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bef330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bef4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bef640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bed970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bed970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4bedcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4bede48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4bec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4bec1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4bec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4bec4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4bec640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4bec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4bea970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4bea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4beacc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4beae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4be9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4be91a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4be9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4be94b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4be9640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4be97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4be7970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4be7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4be7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4be7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4be6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4be61a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4be6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4be64b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4be6640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4be67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4be4970" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4be4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4be4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4be4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4be3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4be31a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4be3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4be34b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4be3640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4be37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc3a03740" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a03740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a03a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a03c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a03da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a14020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a14330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a14640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc3a12bd8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a12bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a11020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a111a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a11330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a114b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a11640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a117c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a11950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a11ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc3a05500" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a05500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a05850"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a059d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a05b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a05ce8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a05e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a04020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc3a148c8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a148c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a14c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a14da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a13020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a131a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a13330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a134b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a13640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc3a11d60" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a11d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a100d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a10260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a103e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a10570"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a106f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a10880"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a10a08"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc3a045b8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a045b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a04908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a04a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a04c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a04da0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a03020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a031a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a03330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc3a13a50" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a13a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a13da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a12020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a121a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a12330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a124b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a12640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a127c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a12950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc3a10e18" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a10e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a0f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a0f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a0f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a0f640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a0f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a0f950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a0fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a0fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c466a8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c466a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c469f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c46b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c46d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c45020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c45330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c454b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c45640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c43710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c43710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c43a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c43be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c43d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c42020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c42330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c424b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c42640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c40710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c40710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c40a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c40be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c40d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c3f020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c3f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c3f330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c3f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c3f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c3d710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c3d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c3da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c3dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c3dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c3b020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c3b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c3b330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c3b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c3b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c39710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c39710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c39a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c39be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c39d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c38020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c38330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c384b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c38640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c36710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c36710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c36a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c36be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c35020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c35330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c354b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c35640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c8d710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c8d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c8da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c8dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c8dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c8c020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c8c330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c8c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c8c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c8a710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c8a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c8aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c8abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c8ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c89020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c89330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc3a18120" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a18120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a18470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a185f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a18780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a18908"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a18a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a18c18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a18da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc3a155b8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a155b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a15908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a15a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a15c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a15da0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a251a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a25330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc3a1be40" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a1a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a1a348"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a1a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a1a658"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a1a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a1a968"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a1aaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a1ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc3a172a8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a172a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a175f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a17780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a17908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a17a90"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a17c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a17da0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a16020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc3a25740" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a25740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a25a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a25c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a25da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a24020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a24330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a244b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a24640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc3a19020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a19370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a19680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a19808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a19990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a19b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a19ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a19e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc3a16430" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a16430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a16780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a16908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a16a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a16c18"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a16da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a15020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a151a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a15330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc3a248c8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a248c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a24c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a24da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a23020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a231a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a23330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a234b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a23640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c946a8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c946a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c949f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c94b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c94d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c93020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c93330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c93640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c91710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c91710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c91a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c91be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c91d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4c90020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4c901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4c90330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4c904b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4c90640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4c8e710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4c8e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4c8ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4c8ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4c8ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ce9020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ce91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ce9330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ce94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ce9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ce7710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ce7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ce7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ce7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ce7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ce6020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ce61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ce6330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ce64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ce6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ce4710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ce4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ce4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ce4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ce4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4ce2020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ce21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4ce2330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ce24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4ce2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4ce0710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4ce0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4ce0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4ce0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4ce0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4cdf020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4cdf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4cdf330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4cdf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4cdf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4cdd710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4cdd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4cdda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4cddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4cddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4cdc020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4cdc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4cdc330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4cdc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4cdc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4cda710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4cda710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4cdaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4cdabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4cdad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4cd9020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4cd91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4cd9330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4cd94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4cd9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc3a2ebd8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a2ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a2c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a2c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a2c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a2c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a2c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a2c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a2c950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a2cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc3a29020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a29370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a29680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a29808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a29990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a29b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a29ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a29e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc3a1e930" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a1e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a1ec80"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a1ee08"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a2f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a2f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a2f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a2f640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc3a2cd60" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a2cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a2b0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a2b260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a2b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a2b570"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a2b6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a2b880"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a2ba08"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a2bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc3a28120" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a28120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a28470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a285f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a28780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a28908"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a28a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a28c18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a28da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc3a2fa50" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a2fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a2fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a2e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a2e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a2e330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a2e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a2e640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a2e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a2e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc3a2be18" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a2be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a2a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a2a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a2a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a2a640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a2a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a2a950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a2aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a2ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc3a272a8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a272a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a275f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a27780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a27908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a27a90"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a27c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a27da0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a38020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d426a8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d426a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d429f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d42b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d42d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d41020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d41330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d3f710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d3f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d3fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d3fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d3fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d3e020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d3e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d3e330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d3e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d3e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d3c710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d3c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d3ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d3cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d3cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d3b020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d3b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d3b330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d3b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d3b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d39710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d39710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d39a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d39be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d39d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d38020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d38330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d384b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d38640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d36710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d36710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d36a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d36be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d34020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d34330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d34640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d32710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d32710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d32a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d32be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d32d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d31020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d31330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d314b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d31640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d2f710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d2f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d2fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d2fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d2fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d2e020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d2e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d2e330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d2e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d2e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d2c710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d2c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d2ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d2cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d2cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d2b020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d2b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d2b330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d2b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d2b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1fc3a30430" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1fc3a30430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a30780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a30908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a30a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a30c18"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a30da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a41020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a411a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a41330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1fc3a3f8c8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1fc3a3f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a3fc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a3fda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a3e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a3e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a3e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a3e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a3e640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a3e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1fc3a321e8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1fc3a321e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a32538"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a326c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a32848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a329d0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a32b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a32ce0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a32e68"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1fc3a415b8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1fc3a415b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a41908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a41a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a41c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a41da0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a40020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a401a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a40330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a404b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1fc3a3ea50" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1fc3a3ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a3eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a3d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a3d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a3d330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a3d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a3d640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a3d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a3d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1fc3a312a8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1fc3a312a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a315f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a31780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a31908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a31a90"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a31c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a31da0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a30020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1fc3a40740" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1fc3a40740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a40a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a40c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a40da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a3f020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a3f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a3f330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a3f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a3f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1fc3a3dbd8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1fc3a3dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a3c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a3c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a3c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a3c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a3c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a3c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a3c950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a3cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d986a8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d986a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d989f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d98b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d98d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d97020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d97330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d95710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d95710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d95a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d95be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d95d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d94020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d94330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d944b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d94640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d92710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d92710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d92a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d92be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d92d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d91020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d91330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d914b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d91640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d8f710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d8f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d8fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d8fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d8fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d8e020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d8e330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d8e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d8e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d8c710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d8c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d8ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d8cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d8cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d8b020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d8b330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d8b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d8b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d89710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d89710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d89a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d89be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d89d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d87020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d87330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d874b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d85710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d85710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d85a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d85be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d85d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d84020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d84330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc4d82710" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc4d82710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4d82a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4d82be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4d82d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4d81020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4d811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4d81330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4d814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4d81640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a47ac0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a47ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a47e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a55020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a551a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a55330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a554b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a55640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a557c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a64db8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a64db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a63170"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a632f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a63480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a63608"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a63790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a63918"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a63aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a63c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a5e3e0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a5e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a5e730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a5e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a5ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a5ebc8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a5ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a5d020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a5d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a5d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a6c7e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a6c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a6cb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a6ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a6ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a6b020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a6b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a6b330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a6b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a6b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a67c38" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a67c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a66020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a661a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a66330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a664b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a66640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a667c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a66950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a66ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a74020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a74370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a74680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a74808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a74990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a74b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a74ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a74e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a70480" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a707d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a70958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a70ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a70c68"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a70df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a6f020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a7f7e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a7f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a7fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a7fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a7fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a7e020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a7e330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a7a970" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a7a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a7acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a7ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a79020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a791a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a79330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a794b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a79640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a8aab0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a8aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a8ae00"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a89020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a891a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a89330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a894b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a89640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a897c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a89950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a85c38" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a85c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a84020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a84330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a844b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a847c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a84950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a93020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a93370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a934f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a93680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a93808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a93990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a93b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a93ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a93e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1fc3a8f180" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1fc3a8f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3a8f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3a8f658"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3a8f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3a8f968"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3a8faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3a8fc78"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3a8fe00"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3a8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3acd020" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3acd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b1fc3807128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b1fc3807128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3acd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b1fc3acd650" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc3acd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1fc3acd9a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1fc3acdb28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1fc3acdcb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1fc3acde38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1fc3acc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b1fc3ae8a60" loc="49:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1fc3ae8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3ae8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b1fc3ae9278" loc="46:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1fc3ae9278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1fc3ae95c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b1fc3ae8398" loc="48:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1fc3ae8398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3ae86e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b1fc3ae98b0" loc="47:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1fc3ae98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3ae9c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1fc3ae9d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1fc3ae8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b1fc380f1c8" loc="37:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc380f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc380f518"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc380f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b1fc380c600" loc="36:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1fc380c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc380c950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1fc380cad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1fc380cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b1fc38c0b08" loc="45:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b1fc38c0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc38c0e58"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc38bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b1fc38be020" loc="46:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b1fc38be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b1fc38be370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b1fc38c1b48" loc="44:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1fc38c1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc38c0020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1fc38c01a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1fc38c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b1fc38e52b0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1fc38e52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b1fc38e5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b1fc3815dc8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b1fc3815dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b1fc38df170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b1fc38db240" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc38db240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1fc38db590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x2b1fc3b23a10" loc="16:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b1fc3b23a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3b23d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b08020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b081a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3b08330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3b084b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b1fc3b0aad0" loc="14:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b1fc3b0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3b0ae20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3b0e020"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3b0e1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3b0e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b1fc3b032d8" loc="11:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1fc3b032d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1fc3b03628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPacket" ref="0x2b1fc3b16550" loc="15:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b1fc3b16550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3b168a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc3b16a28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b16bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b16d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc3b09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMControl" ref="0x2b1fc3b208f0" loc="20:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMControl" scoped="" ref="0x2b1fc3b208f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3b20c40"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3b20dc8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3b17020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3b171a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x2b1fc3b17530" loc="21:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacket" scoped="" ref="0x2b1fc3b17530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3b17880"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc3b17a08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b17b90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b17d18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc3b24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x2b1fc3b24390" loc="22:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x2b1fc3b24390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3b246e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b24868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b249f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3b24b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3b24d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x2b1fc3b1d0e8" loc="23:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x2b1fc3b1d0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b1d438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc3b0fc38" loc="10:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc3b0fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc3b04020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc3b041a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc3b04330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc3b044b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc3b04640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b047c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc3b04950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc3b03020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b04ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc3b04c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc3b04de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataReceive" ref="0x2b1fc3b201a0" loc="17:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b1fc3b201a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b204f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b1fc3b40270" loc="35:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc3b40270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc3b405c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc3b40748"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc3b408d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc3b40a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc3b40be0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b40d68"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc3b3f020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc3b3f640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b3f1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc3b3f330"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc3b3f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b1fc3b501b0" loc="39:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b1fc3b501b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b50500"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b50688"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b50810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b50998"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b50b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b50ca8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b50e30"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3b524f0" loc="35:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3b524f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3b52840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b1fc3b4f338" loc="40:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b1fc3b4f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b4f688"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b4f810"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b4f998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b4fb20"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b4fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b4fe30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b4e020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b1fc3b52ab8" loc="36:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc3b52ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc3b52e08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc3b51020"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc3b511a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc3b51330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc3b514b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b51640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc3b517c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc3b51de8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b51950"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc3b51ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc3b51c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b1fc3b4e4c0" loc="41:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b1fc3b4e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b4e810"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b4e998"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b4eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b4eca8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b4ee30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b4d020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b1fc3b74988" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b1fc3b74988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b74cd8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b74e60"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b73020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b731a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b73330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b734b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b73640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b1fc3b73b20" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b1fc3b73b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b73e70"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b72020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b721a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b72330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b724b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b72640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b727c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b72950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b1fc3b71d90" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3b71d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3b70170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b1fc3b72ca8" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b1fc3b72ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3b71020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3b711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3b71330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3b714b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3b71640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3b717c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b71950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3b71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc3b6cb00" loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b6cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3b6ce50"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3b80020"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3b801a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3b80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc3b80aa8" loc="52:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b80aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3b80df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b7f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3b7f330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3b7f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1fc3b7d818" loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1fc3b7d818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b7db68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc3b7ddf0" loc="56:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc3b7ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3b7c170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc3b7c2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b7c480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b7c608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc3b7c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b1fc3ba3710" loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc3ba3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc3b98c58"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc3b93380"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc3b98578"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3b93a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc3b7fc38" loc="53:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc3b7fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1fc3b95a80" loc="58:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3b95a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc3b95dd0"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc3b81020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc3b811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc3b828a0" loc="57:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3b828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc3b82bf0"/>
        <function-ref name="source" scoped="" ref="0x2b1fc3b82d78"/>
        <function-ref name="address" scoped="" ref="0x2b1fc3b7b020"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc3b7b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc3b7b330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc3b7b4b8"/>
        <function-ref name="type" scoped="" ref="0x2b1fc3b7b640"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc3b7b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc3b7b950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc3b7bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc3b7bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1fc3ba2670" loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc3ba2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc3ba1ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc3ba01f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc3ba13f0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3ba08d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc3b9ec48" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3b9ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3b9b020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3b9b1a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3b9b330"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3b9b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc3bab020" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3bab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3bab370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3bab4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3bab680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3bab808"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3bab990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3babb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1fc3bbe020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1fc3bbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1fc3bbe470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc3baf5b8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc3baf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3baf908"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc3bafa90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3bafc18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3bafda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc3bae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc3b9bc30" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc3b9bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3b9a020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3b9a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3b9a330"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3b9a4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3b9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1fc3b99968" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1fc3b99968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b99cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b1fc3ba7670" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3ba7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc3ba79c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc3ba7b48"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc3ba7cd0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc3ba7e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1fc3bc3a60" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc3bc3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b1fc3bc3db0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b1fc3bb3020"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b1fc3bb31a8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b1fc3bb3330"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b1fc3bb34b8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b1fc3bb3640"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b1fc3bb37c8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b1fc3bb3950"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b1fc3bb3ad8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b1fc3bb3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc3b9adc0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc3b9adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3b99170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1fc3bad1c0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc3bad1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc3bad510"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc3bad698"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc3bad820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1fc3bce418" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1fc3bce418"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1fc3bce768"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1fc3bce8f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1fc3bcea78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1fc3bcec00"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1fc3bced88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc3bb0020" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3bb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc3bb0370"/>
        <function-ref name="source" scoped="" ref="0x2b1fc3bb04f8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc3bb0680"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc3bb0808"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc3bb0990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc3bb0b18"/>
        <function-ref name="type" scoped="" ref="0x2b1fc3bb0ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc3bb0e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc3baf020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc3baf1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc3baf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1fc3bba170" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc3bba170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1fc3bba4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc3bd9020" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc3bd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3bd9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc3be7320" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc3be7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3be7670"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3be77f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3be7980"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3be7b08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3be7c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b1fc3bf1ba8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3bf1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b1fc3be6020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b1fc3be61a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b1fc3be6330"/>
        <function-ref name="syncDone" scoped="" ref="0x2b1fc3be64b8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b1fc3be6640"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b1fc3be67c8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1fc3be6950"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b1fc3be6ad8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b1fc3be6c60"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b1fc3be6de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b1fc3be2020"/>
        <function-ref name="sync" scoped="" ref="0x2b1fc3be21a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1fc3be2330"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b1fc3be25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc3bdb1c8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3bdb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3bdb518"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3bdb6a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3bdb828"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3bdb9b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3bdbb38"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3bdbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1fc3bdc5b0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1fc3bdc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1fc3bdc900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b1fc3bf0390" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b1fc3bf0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3bf06e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3bf0868"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3bf09f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3bf0b78"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3bf0d00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3bef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc3bde430" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc3bde430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3bde780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc3bde908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3bdea90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3bdec18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc3bdeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc3bcab20" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc3bcab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3bcae70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3bc9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3bc91a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3bc9330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3bc94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1fc3be0818" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1fc3be0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3be0b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b1fc3bd9638" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3bd9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc3bd9988"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc3bd9b10"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc3bd9c98"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc3bd9e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b1fc3c05640" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc3c05640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1fc3c05a90"/>
        <function-ref name="changed" scoped="" ref="0x2b1fc3c05c18"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1fc3c05da0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1fc3bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc3be3a30" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc3be3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc3be3d80"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc3be8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc3bc9c38" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc3bc9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3be0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc3be0e08" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc3be0e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc3bdf1a8"/>
        <function-ref name="source" scoped="" ref="0x2b1fc3bdf330"/>
        <function-ref name="address" scoped="" ref="0x2b1fc3bdf4b8"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc3bdf640"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc3bdf7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc3bdf950"/>
        <function-ref name="type" scoped="" ref="0x2b1fc3bdfad8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc3bdfc60"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc3bdfde8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc3bde020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc3bde1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc3c6e880" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3c6e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3c6ebd0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3c6ed58"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3c6d020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3c6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc3c6c760" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3c6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3c6cab0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3c6cc38"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3c6cdc0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3c6b020"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3c6b1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3c6b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc3c6d460" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc3c6d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3c6d7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3c6d938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3c6dac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3c6dc48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3c6ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc3c6c108" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc3c6c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc3c6c458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc3c682c8" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc3c682c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc3c68618"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc3c687a0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3c68928"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3c68ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc3c67a18" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc3c67a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3c67d68"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3c65020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3c651a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3c65330"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3c654b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3c65640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b1fc3c73d40" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b1fc3c73d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc3c700d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc3c70260"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc3c703e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc3c70570"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc3c706f8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc3c70880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b1fc3c85de0" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc3c85de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc3c83170"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc3c832f8"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc3c83480"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc3c83608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b1fc3c73020" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b1fc3c73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3c73370"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3c734f8"/>
        <function-ref name="modify" scoped="" ref="0x2b1fc3c73680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3c73808"/>
        <function-ref name="resend" scoped="" ref="0x2b1fc3c73990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc3c68d68" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc3c68d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc3c670f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc3c67278"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc3c67400"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc3c67588"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc3c67710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1fc3c86020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1fc3c86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1fc3c86370"/>
        <function-ref name="rand32" scoped="" ref="0x2b1fc3c864f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b1fc3c726b8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b1fc3c726b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc3c72a08"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3c72b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc3c83938" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc3c83938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc3c83c88"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc3c83e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b1fc3c75d00" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3c75d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b1fc3c630a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b1fc3c63228"/>
        <function-ref name="rxOn" scoped="" ref="0x2b1fc3c633b0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b1fc3c63538"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b1fc3c636c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b1fc3c63848"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b1fc3c639d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b1fc3c63b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc3c867b0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc3c867b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc3c86b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc3c86c88"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc3c86e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc3c85020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc3c851a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3c85330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc3c854b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc3c85ad8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3c85640"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc3c857c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc3c85950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b1fc3c7bbd8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc3c7bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3c64020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3c641a8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3c64330"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3c644b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3c64640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b1fc3c98b40" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b1fc3c98b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc3c80020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc3c801a8"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc3c80330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc3c804b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc3c80640"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc3c807c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b1fc3c936e0" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b1fc3c936e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc3c93a30"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc3c93bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b1fc3c94810" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b1fc3c94810"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc3c94b60"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc3c94ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b1fc3c95450" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b1fc3c95450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc3c957a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc3c95928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b1fc3cd6d90" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3cd6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b1fc3cd5170"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b1fc3cd52f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b1fc3cd5480"/>
        <function-ref name="syncDone" scoped="" ref="0x2b1fc3cd5608"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b1fc3cd5790"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b1fc3cd5918"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1fc3cd5aa0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b1fc3cd5c28"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b1fc3cd5db0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b1fc3cd4020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b1fc3cd41a8"/>
        <function-ref name="sync" scoped="" ref="0x2b1fc3cd4330"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1fc3cd44b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b1fc3cd4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b1fc3cebd28" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b1fc3cebd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3cd18b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc3cd1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b1fc3cd4a38" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3cd4a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b1fc3cd4d88"/>
        <function-ref name="rfOff" scoped="" ref="0x2b1fc3cd3020"/>
        <function-ref name="rxOn" scoped="" ref="0x2b1fc3cd31a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2b1fc3cd3330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b1fc3cd34b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b1fc3cd3640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b1fc3cd37c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b1fc3cd3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc3cd6118" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc3cd6118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3cd6468"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3cd65f0"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3cd6778"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3cd6900"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3cd6a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b1fc3ce6328" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc3ce6328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b1fc3ce6678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b1fc3ce6800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b1fc3ce6988"/>
        <function-ref name="syncDone" scoped="" ref="0x2b1fc3ce6b10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b1fc3ce6c98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b1fc3ce6e20"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1fc3ce5020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b1fc3ce51a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b1fc3ce5330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b1fc3ce54b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b1fc3ce5640"/>
        <function-ref name="sync" scoped="" ref="0x2b1fc3ce57c8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1fc3ce5950"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b1fc3ce5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b1fc3d00020" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc3d00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d00370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d004f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b1fc3cf7ac8" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b1fc3cf7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc3cf5150"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3ce01f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc3ce0b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc3ce0680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc3cf55d8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3ce1860"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3ce1d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b1fc3d09dc8" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc3d09dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d04170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d042f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b1fc3cf3ca8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b1fc3cf3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3cf2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3cf21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3cf2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3cf24b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3cf2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3cf27c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3cf2950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3cf2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b1fc3ce3308" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b1fc3ce3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3ce3e50"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc3ce22d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b1fc3d0f720" loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b1fc3d0f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc3d0fa70"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc3d0fbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b1fc3d00880" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc3d00880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d00bd0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d00d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b1fc3d01bf0" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc3d01bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d09020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d091a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b1fc3cef080" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc3cef080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1fc3cef3d0"/>
        <function-ref name="changed" scoped="" ref="0x2b1fc3cef558"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1fc3cef6e0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1fc3cef868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b1fc3cf5ab0" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b1fc3cf5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3cf5e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3cf3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3cf31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3cf3330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3cf34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3cf3640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3cf37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3cf3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b1fc3cfede8" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc3cfede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc3cfd170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b1fc3cf2e30" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b1fc3cf2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3cf11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3cf1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3cf14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3cf1640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3cf17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3cf1950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3cf1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3cf1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3ce7020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3ce7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b1fc3d046a8" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc3d046a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d049f8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d04b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b1fc3cfd500" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc3cfd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc3cfd850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b1fc3cfdbe0" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1fc3cfdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3cfc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3cfc1a8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3cfc330"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3cfc4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3cfc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b1fc3d199e0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b1fc3d199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3d19d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3d18020"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3d181a8"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3d18330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3d184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b1fc3ce4020" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b1fc3ce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b1fc3ce4370"/>
        <function-ref name="rfOff" scoped="" ref="0x2b1fc3ce44f8"/>
        <function-ref name="rxOn" scoped="" ref="0x2b1fc3ce4680"/>
        <function-ref name="startVReg" scoped="" ref="0x2b1fc3ce4808"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b1fc3ce4990"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b1fc3ce4b18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b1fc3ce4ca0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b1fc3ce4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b1fc3d09540" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc3d09540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d09890"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d09a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b1fc3d01280" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc3d01280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3d016d0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3d01858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b1fc3cfe020" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc3cfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc3cfe370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc3d18770" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc3d18770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc3d18ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc3d18c48"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc3d18dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc3d17020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc3d171a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3d17330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc3d174b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc3d17ad8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3d17640"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc3d177c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc3d17950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b1fc3d108d8" loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b1fc3d108d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc3d10c28"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc3d10db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc3ce7650" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc3ce7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3ce79a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3ce7b28"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3ce7cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3ce7e38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3ce6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b1fc3d05df8" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc3d05df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc3cee170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc3cee2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b1fc3d0a4e0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b1fc3d0a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc3d0a830"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3d0a9b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc3d0ab40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc3d0acc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b1fc3cfc9e0" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b1fc3cfc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc3d19020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc3d191a8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc3d19330"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc3d194b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc3d19640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b1fc3cfe6f8" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc3cfe6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc3cfea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3d78248" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3d78248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3d78598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b1fc3d78bc0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b1fc3d78bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc3d74270"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3d76310"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc3d76c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc3d76798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc3d746f8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3d77948"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3d77e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc3d919e8" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc3d919e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc3fc6088"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3fca0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc3fcaa08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc3fca580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc3fc6510"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3fcb768"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3fcbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3fc6928" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3fc6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3fc6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4ea0530" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4ea0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4e9dc88"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e9fd08"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4e9d680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4e9d1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4e9c150"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e9f3a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e9f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4e999e0" loc="30:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4e96088"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e970f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4e97a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4e97580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4e96510"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e98768"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e98c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc3dad0c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3dad0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc3dad410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b1fc3dad598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc3dad720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b1fc3dad8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc3dada30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc3dadbb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b1fc3dadd40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b1fc3dac020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b1fc3dac1a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b1fc3dac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1fc3dbdb68" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1fc3dbdb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1fc3dbbdb8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3dbb4a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3da4728"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc3dc30c0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3dc3598"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3dbb930"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3da4bb0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3dc3a20"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3dbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1fc3db9020" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1fc3db9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3dd17a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3db8560"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3db9ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3db89e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3dd1c30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3db8088"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3db8e70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3dd1320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc3d9b020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3d9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3daf0f8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3db17a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3d9bba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3daf580"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3dafa58"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3d9a9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3d9a560"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3db1c30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3d9a088"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3d9ae70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3db1320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc3de1950" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3de1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b1fc3de1ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc3de1e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc3dc7020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc3dc71a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc3dc7330"/>
        <function-ref name="setControl" scoped="" ref="0x2b1fc3dc74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b1fc3dd7470" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc3dd7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b1fc3dd77c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b1fc3dd7948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b1fc3dd7ad0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1fc3dd7c58"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1fc3dd7de0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1fc3ddd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1fc3dc7980" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1fc3dc7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3dde270"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3ddf020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3de0560"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3ddf4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3dde6f8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3de09e8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3ddf930"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3ddfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc3dd0d90" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3dd0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3dcae58"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3dca548"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3dcd940"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3dc9310"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3dc97e8"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3dcb778"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3dcb2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3dca9d0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3dcddc8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3dcbc00"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3dca0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc3df0558" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3df0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b1fc3df08a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc3df0a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc3df0bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc3df0d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc3dee020"/>
        <function-ref name="setControl" scoped="" ref="0x2b1fc3dee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b1fc3deb790" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1fc3deb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b1fc3debae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b1fc3de9020" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc3de9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b1fc3de9370"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b1fc3de94f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b1fc3de9680"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1fc3de9808"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1fc3de9990"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1fc3de9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1fc3dee670" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1fc3dee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3dece20"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3dedb80"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3ded220"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3dec088"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3deb310"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3ded6a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3dec510"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3dec998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc3dd5400" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3dd5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3df1580"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3df2c20"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3dd4020"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3df1a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3df0020"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3dd4e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3dd4980"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3df10f8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3dd44a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3df2310"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3df2798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc3e55568" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc3e55568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc3e558b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b1fc3e55a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc3e55bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b1fc3e55d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc3e54020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc3e541a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b1fc3e54330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b1fc3e544b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b1fc3e54640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b1fc3e547c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b1fc3e65020" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b1fc3e65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b1fc3e65370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc3e654f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc3e65680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc3e65808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc3e65990"/>
        <function-ref name="setControl" scoped="" ref="0x2b1fc3e65b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b1fc3e4f540" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b1fc3e4f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3e4ddb8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3e4ea58"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3e4e0f8"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3e4d020"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3e4b270"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3e4e580"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3e4d4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3e4d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1fc3e54ca0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1fc3e54ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1fc3e51e20"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3e51510"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3e53858"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc3e52238"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3e52710"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3e51998"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3e53ce0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3e52b98"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3e51088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b1fc3e4b8e8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b1fc3e4b8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3e6a088"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3e4adf0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3e4a490"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3e492b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3e6a510"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3e4a918"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3e49738"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3e49bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b1fc3e6ab88" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b1fc3e6ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc3e664a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3e670f8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3e68760"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3e67580"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3e66930"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3e68be8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3e67a08"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3e66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc3e39490" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3e39490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3e57580"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3e58c30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3e59088"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3e57a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3e55020"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3e59e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3e599e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3e570f8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3e59510"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3e58320"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3e587a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3ef5190" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3ef5190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3ef54e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1fc3ef58b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3ef58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3f0b998"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3f0b088"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3ee9490"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3f0be20"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3f0a350"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3f0d2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3ee9df0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3f0b510"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3ee9918"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3f0d738"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3f0dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4e83020" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e83020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b1fc3808a20"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b1fc3808a20"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4e81690"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e826f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4e81088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4e82b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4e81b18"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e83d70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e82270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b1fc4e7b128" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b1fc4e7b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc4e78930"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e79668"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4e7bca8"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4e79af0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4e78db8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4e79190"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e78020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e784a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b1fc4e800a0" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b1fc4e800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc4e7c270"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4e7d930"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4e80c20"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc4e7c6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc4e7cbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4e7ea58"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4e7e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4e7ddb8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4e7e0f8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e7d020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e7d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc3f3bd70" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc3f3bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc3f3faf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc3f3e4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc3f3e020"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f3e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc3f39ad0" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc3f39ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc3f36860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc3f341f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc3f36ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f34680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc3f57a98" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc3f57a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc3f6c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc3f6b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc3f6ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f6b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1fc3f6bb78" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc3f6bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc3f67c20"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3f67310"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3f6a728"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc3f660f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc3f665d0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3f68548"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f680c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3f67798"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3f6abb0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3f689d0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3f68e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b1fc3f942b0" loc="52:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b1fc3f942b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc3f93088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc3f93998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc3f93510"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f93e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc3f6f0e0" loc="51:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc3f6f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc3f6fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc3f6e798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc3f6e310"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc3f6ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4e94830" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4e94830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4e90020"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e91020"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4e91930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4e914a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4e904a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e935e0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e93ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b1fc4e8ece8" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b1fc4e8ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="TOne" ref="0x2b1fc38bae60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4e8a410"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4e8b4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4e8bdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4e8b930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4e8a898"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4e8dac0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1fc4e90ad0" loc="57:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4e90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4e8f860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4e8e1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4e8fce8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4e8e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc3fcca58" loc="18:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc3fcca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc3fccda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b1fc3fc0020" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b1fc3fc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fc0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fc04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fc0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fc0808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fc0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fc0b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fc0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fc0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b1fc3fbf198" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b1fc3fbf198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fbf4e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fbf670"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fbf7f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fbf980"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fbfb08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fbfc90"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fbfe18"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b1fc3fbe338" loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b1fc3fbe338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fbe688"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fbe810"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fbe998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fbeb20"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fbeca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fbee30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fbd020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b1fc3fc2de0" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b1fc3fc2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fc1170"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fc12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fc1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fc1608"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fc1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fc1918"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fc1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fc1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b1fc3fe4648" loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b1fc3fe4648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fe4998"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fe4b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fe4ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fe4e30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fe3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fe31a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fe3330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fe34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b1fc3d79c88" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b1fc3d79c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fc2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fc21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fc2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fc24b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fc2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fc27c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fc2950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fc2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b1fc3fbd4b0" loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b1fc3fbd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc3fbd800"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc3fbd988"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc3fbdb10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc3fbdc98"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3fbde20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc3fe4020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3fe41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc3fe4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b1fc3fd6e80" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b1fc3fd6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1fc3fda1f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3fda380"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc3fda508"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1fc3fda690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b1fc3fdaa60" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b1fc3fdaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc3fdadb0"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3fd9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc3fd91a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc3fd9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b1fc3fd9710" loc="41:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b1fc3fd9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc3fd9a60"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3fd9be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc3fd9d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc3fd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1fc3fd3020" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1fc3fd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1fc3fd3370"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3fd34f8"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc3fd3680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1fc3fd3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b1fc3fd3bd8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b1fc3fd3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1fc3fe8db8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc3fe84a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc3feb7a0"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc3fe9130"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc3fe9608"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc3fe8930"/>
        <function-ref name="set" scoped="" ref="0x2b1fc3febc28"/>
        <function-ref name="start" scoped="" ref="0x2b1fc3fe9a90"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc3fe8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b1fc400d2e8" loc="9:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b1fc400d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc400d638"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc400d7c0"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc400d948"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc400dad0"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc400dc58"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc400dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b1fc3fe56f0" loc="8:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b1fc3fe56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc3fe5a40"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3fe5bc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc3fe5d50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc400d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b1fc401c020" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b1fc401c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc401c370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc401c4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc401c680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc401c808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc401c990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc401cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b1fc4022208" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b1fc4022208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4022558"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc40226e0"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4022868"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc40229f0"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4022b78"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4022d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b1fc401e020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b1fc401e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc401e370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc401e4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc401e680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc401e808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc401e990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc401eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b1fc401b020" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b1fc401b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc401b370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc401b4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc401b680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc401b808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc401b990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc401bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b1fc40210f0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b1fc40210f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4021440"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc40215c8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4021750"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc40218d8"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4021a60"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4021be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b1fc401d020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b1fc401d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc401d370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc401d4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc401d680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc401d808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc401d990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc401db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b1fc3ff9370" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b1fc3ff9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc3ff96c0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc3ff9848"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc3ff99d0"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc3ff9b58"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc3ff9ce0"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc3ff9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b1fc4020020" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b1fc4020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4020370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc40204f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4020680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4020808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4020990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4020b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b1fc4013020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b1fc4013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4013370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b1fc4014b18" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b1fc4014b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4014e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b1fc4015148" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b1fc4015148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4015498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b1fc4013758" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b1fc4013758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4013aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b1fc4016280" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b1fc4016280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc40165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b1fc4015880" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b1fc4015880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4015bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b1fc40143e0" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b1fc40143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4014730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b1fc40169b8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b1fc40169b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4016d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc4049a70" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc4049a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4049dc0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4060020"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc40601a8"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4060330"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc40604b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4060640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc4060908" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4060908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4060c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc405d7a8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc405d7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc405daf8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc405dc80"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc405de08"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc405c020"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc405c1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc405c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc405c5f8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc405c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc405c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc40593e0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc40593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4059730"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc40598b8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4059a40"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4059bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4059d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4058020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc40582e8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc40582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4058638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc4054020" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc4054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4054370"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc40544f8"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4054680"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4054808"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4054990"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4054b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc4054de0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4054de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4053170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc4051cd8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc4051cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc40500a0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4050228"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc40503b0"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4050538"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc40506c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4050848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc4050b10" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4050b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4050e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc40769d8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc40769d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4076d28"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4075020"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc40751a8"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc4075330"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc40754b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc4075640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc4075908" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4075908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4075c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc4072970" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc4072970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4072cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4072e48"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc4071020"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc40711a8"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc4071330"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc40714b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc4071780" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc4071780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc4071ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b1fc406e6a8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b1fc406e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc406e9f8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc406eb80"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc406ed08"/>
        <function-ref name="edge" scoped="" ref="0x2b1fc406d020"/>
        <function-ref name="enable" scoped="" ref="0x2b1fc406d1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b1fc406d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b1fc406d5f8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b1fc406d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc406d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b1fc408b020" loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b1fc408b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc408b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc408b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc408b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc408b808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc408b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc408bb18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc408bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc408be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b1fc408c420" loc="47:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b1fc408c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc408c770"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc408c8f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc408ca80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc408cc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b1fc40898e0" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b1fc40898e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4089c30"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4089db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b1fc4295470" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc4295470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42959c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4295b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b1fc42bf908" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42bf908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42bfc58"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42bfde0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42be020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42be1a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b1fc42a09b8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42a09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42a0d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b1fc4299470" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc4299470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42997c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4299948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b1fc42c8d98" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42c8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c7170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b1fc42c75c0" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42c75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c7910"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c7a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b1fc429fc50" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc429fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b1fc42c0470" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c07c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b1fc4298470" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc4298470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42987c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4298948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b1fc4296470" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc4296470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42967c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4296948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b1fc42c7d60" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42c7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c60d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b1fc42c3470" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b1fc42c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c37c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc42a1430" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42a1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc42a1780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc42a1908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc42a1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b1fc429c638" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc429c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b1fc429cc50" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc429cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b1fc429b3a0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc429b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b1fc429e900" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc429e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b1fc4298c10" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc4298c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4296020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b1fc4299c10" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc4299c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4298020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b1fc42a03a0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42a03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42a06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b1fc42c3c10" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b1fc42c3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c2020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b1fc42c1c10" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42c1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c0020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b1fc42c6cc8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42c6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c50a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c5228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b1fc42a1d58" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc42a1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42a00d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b1fc429ac50" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b1fc429ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4299020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b1fc4296c10" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc4296c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4295020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b1fc42c0c10" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42bf020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42bf1a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42bf330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42bf4b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b1fc42c6528" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42c6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c6878"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b1fc4295e10" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc4295e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c81a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b1fc429f020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc429f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b1fc42c85f8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42c85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c8948"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc42a27d0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc42a27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc42a2b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42a2ca8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc42a2e30"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc42a1020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc42a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b1fc429b9b8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc429b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b1fc429a638" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b1fc429a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b1fc42c1470" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc42c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c17c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b1fc42c2c10" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c1020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b1fc429c020" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc429c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b1fc42c2470" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42c2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c27c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b1fc429f638" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc429f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b1fc429e2e8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc429e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b1fc429a020" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b1fc429a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc429a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b1fc42c54f0" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42c54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c5840"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c59c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b1fc42c5c90" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42c5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42c3020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b1fc40a6d48" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b1fc40a6d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc40a50d8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc40a5260"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40a53e8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc40a5570"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc40a56f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc40a8e58" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40a8e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc40a61e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc40a6370"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc40a64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b1fc40a4020" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b1fc40a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc40a4370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40a44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b1fc40a4d60" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b1fc40a4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc40a30d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40a3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc40a81c8" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc40a81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc40a8518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc40a86a0"/>
        <function-ref name="request" scoped="" ref="0x2b1fc40a8828"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc40a89b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc40a8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b1fc40a3ad8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b1fc40a3ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc40a3e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b1fc40c1020" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc40c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc40c1370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc40c14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b1fc40c9e50" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b1fc40c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc40c81e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc40c8370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40c84f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc40c8680"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc40c8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc40cede8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc40cede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc40cb170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc40cb2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc40cb480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b1fc40c3d08" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1fc40c3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1fc40c20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b1fc40c1838" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b1fc40c1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc40c1b88"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc40c1d10"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc40c0020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc40c01a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc40c0330"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc40c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b1fc40c41e8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1fc40c41e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc40c4538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc40c46c0"/>
        <function-ref name="request" scoped="" ref="0x2b1fc40c4848"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc40c49d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc40c4b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b1fc40c7040" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b1fc40c7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc40c7390"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40c7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b1fc40c7d40" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b1fc40c7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc40c60d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc40c6260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc40c0730" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc40c0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc40c0a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc40c0c08"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc40c0d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc40ba020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc40ba1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc40ba330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc40ba4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc40baad8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc40ba640"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc40ba7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc40ba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc40cbc10" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc40cbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc40c9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc40c91a8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc40c9330"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc40c94b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc40c9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b1fc40e15d0" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b1fc40e15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc40e1920"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc40e1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b1fc40c6a98" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b1fc40c6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc40c6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc413f978" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc413f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc413fcc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc413fe50"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc413e020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc413e1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc413e330"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc413e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc413a790" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc413a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc413aae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc413ac68"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc413adf0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc4139020"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc41391a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc4139330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4136438" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4136438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4136788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc4134020" loc="67:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc4134020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc4134370"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc41344f8"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc4134680"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc4134808"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc4134990"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc4134b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b1fc4289880" loc="43:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4289880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4289bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4289d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b1fc42892a8" loc="42:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1fc42892a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1fc42895f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc428a060" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc428a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc428a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc428a638" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc428a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc428a988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc428ab10"/>
        <function-ref name="request" scoped="" ref="0x2b1fc428ac98"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc428ae20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4289020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b1fc4144080" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc4144080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc41443d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4144558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b1fc4148a20" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1fc4148a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1fc4148d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4148400" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4148400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4148750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc4144d28" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc4144d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc41430a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc4143228"/>
        <function-ref name="request" scoped="" ref="0x2b1fc41433b0"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4143538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc41436c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b1fc4193830" loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b1fc4193830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4193b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4193d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b1fc416d4a0" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1fc416d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc416d7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc416d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b1fc417f888" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b1fc417f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc417fbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc417fd60"/>
        <function-ref name="request" scoped="" ref="0x2b1fc417e020"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc417e1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc417e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b1fc4140e78" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1fc4140e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1fc416d1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4140898" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4140898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4140be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b1fc41805a8" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b1fc41805a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1fc41808f8"/>
        <function-ref name="sleep" scoped="" ref="0x2b1fc4169de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1fc4180c08"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1fc417f020"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1fc416a020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1fc416a1a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1fc416a330"/>
        <function-ref name="read" scoped="" ref="0x2b1fc416a4b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1fc416a640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1fc416a7c8"/>
        <function-ref name="setClock" scoped="" ref="0x2b1fc416a950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1fc416aad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1fc416ac60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1fc4169020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1fc41691a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4169330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1fc41694b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1fc4169640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1fc41697c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b1fc4169950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1fc4169ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1fc4180a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1fc4180d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1fc4169c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc416c1c8" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc416c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc416c518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc416c6a0"/>
        <function-ref name="request" scoped="" ref="0x2b1fc416c828"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc416c9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc416cb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b1fc417c4f8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc417c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1fc417c848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b1fc417ace0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc417ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1fc417c0a0"/>
        <function-ref name="userId" scoped="" ref="0x2b1fc417c228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b1fc41cb6d8" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b1fc41cb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1fc41cba28"/>
        <function-ref name="sleep" scoped="" ref="0x2b1fc41c6020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1fc41cbd38"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1fc41c61a8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1fc41c81a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1fc41c8330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1fc41c84b8"/>
        <function-ref name="read" scoped="" ref="0x2b1fc41c8640"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1fc41c87c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1fc41c8950"/>
        <function-ref name="setClock" scoped="" ref="0x2b1fc41c8ad8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1fc41c8c60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1fc41c8de8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1fc41c7120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1fc41c72a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc41c7430"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1fc41c75b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1fc41c7740"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1fc41c78c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b1fc41c7a50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1fc41c7bd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1fc41cbbb0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1fc41c8020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1fc41c7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b1fc41ba958" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b1fc41ba958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc41baca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc41bae30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc41b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc41b91a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc41b9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc41b94b8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc41b9640"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc41b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b1fc41be648" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b1fc41be648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc41be998"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc41beb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc41beca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc41bee30"/>
        <function-ref name="get" scoped="" ref="0x2b1fc41bb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc41bb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc41bb330"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc41bb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b1fc41bf508" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b1fc41bf508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc41bf858"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc41bf9e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc41bfb68"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc41bfcf0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc41bfe78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc41be030"/>
        <function-ref name="set" scoped="" ref="0x2b1fc41be1b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc41be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b1fc41bcc10" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b1fc41bcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc41bf020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc41bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b1fc41b9af8" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b1fc41b9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1fc41b9e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b1fc41c35e0" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b1fc41c35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1fc41c3930"/>
        <function-ref name="sleep" scoped="" ref="0x2b1fc41c1de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1fc41c3c40"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1fc41c0020"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1fc41c2020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1fc41c21a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1fc41c2330"/>
        <function-ref name="read" scoped="" ref="0x2b1fc41c24b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1fc41c2640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1fc41c27c8"/>
        <function-ref name="setClock" scoped="" ref="0x2b1fc41c2950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1fc41c2ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1fc41c2c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1fc41c1020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1fc41c11a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc41c1330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1fc41c14b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1fc41c1640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1fc41c17c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b1fc41c1950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1fc41c1ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1fc41c3ab8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1fc41c3dc8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1fc41c1c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b1fc41bb7d0" loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b1fc41bb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc41bbb20"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc41bbca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc41bbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc41ba020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc41ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc41ba330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc41ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc41ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1fc426f020" loc="76:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1fc426f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1fc426f390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1fc426f518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1fc426e020" loc="79:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1fc426e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1fc426e390"/>
        <function-ref name="configure" scoped="" ref="0x2b1fc426e518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc4270200" loc="75:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc4270200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4270570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42706f8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4270880"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4270a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4270b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1fc426f760" loc="77:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc426f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1fc426fab0"/>
        <function-ref name="userId" scoped="" ref="0x2b1fc426fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4f4b1a8" loc="34:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4f4b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4f4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b1fc4f4b780" loc="35:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b1fc4f4b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1fc4f4bad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1fc4f4bc58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1fc4f4bde0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1fc4f4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1fc4f48388" loc="52:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1fc4f48388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1fc4f486f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1fc4f48880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1fc4f473e8" loc="56:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1fc4f473e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1fc4f47758"/>
        <function-ref name="configure" scoped="" ref="0x2b1fc4f478e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b1fc4f47b68" loc="57:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1fc4f47b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1fc4f46020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1fc4f461a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1fc4f46330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1fc4f464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc4f49590" loc="51:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc4f49590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4f49900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc4f49a88"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4f49c10"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4f49d98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4f48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1fc4f48ac8" loc="53:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1fc4f48ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1fc4f48e18"/>
        <function-ref name="userId" scoped="" ref="0x2b1fc4f47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b1fc4f46780" loc="69:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b1fc4f46780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4f46ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4f46c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b1fc4265c90" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b1fc4265c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4264020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc42641a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4264330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc42644b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4264640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc42647c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4264950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4264ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc42661e0" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc42661e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4266530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42666b8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4266840"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc42669c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4266b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b1fc4265020" loc="44:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b1fc4265020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4265370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42654f8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4265680"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4265808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4265990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b1fc42dea88" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc42dea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42dc020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b1fc42d2100" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42d2450"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42d25d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d2760"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42d28e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42d2a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b1fc42b3020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b1fc42e1a88" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc42e1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42e1dd8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b1fc42db470" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42db7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42db948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b1fc42dbc10" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42da020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b1fc42b22e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc42b22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b2638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b1fc42d4c10" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42d4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d3020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b1fc42e0a88" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc42e0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42e0dd8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b1fc42dfa88" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc42dfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42dfdd8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b1fc42da470" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42da7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42da948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b1fc42d8c10" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b1fc42d8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d6020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc42b5948" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42b5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc42b5c98"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc42b5e20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc42b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b1fc42b1c50" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc42b1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b1fc42af2e8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc42af2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42af738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b1fc42afa00" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc42afa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42afd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b1fc42b1020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc42b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b1fc42df2e8" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc42df2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42df638"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42df7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b1fc42e02e8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc42e02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42e0638"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42e07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b1fc42b4900" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42b4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b4c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b1fc42d6470" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b1fc42d6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d67c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b1fc42d4470" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d47c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b1fc42d9470" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d97c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b1fc42b42e8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc42b42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b4638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b1fc42e12e8" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b1fc42e12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42e1638"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42e17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b1fc42de2e8" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc42de2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42de638"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42de7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b1fc42d3470" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42d3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42d37c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42d3948"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d3ad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42d3c58"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42d3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b1fc42dac10" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42dac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d9020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b1fc42dc470" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc42dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42dc7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42dc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b1fc42b3638" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc42b3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b1fc42dcc10" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42dcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42db020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc42b7cd8" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc42b7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc42b50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42b5228"/>
        <function-ref name="request" scoped="" ref="0x2b1fc42b53b0"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc42b5538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc42b56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b1fc42e2060" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc42e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42e23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b1fc42e2c90" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b1fc42e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b1fc42d5c10" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc42d5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d4020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b1fc42d5470" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42d5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d57c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b1fc42b1638" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc42b1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b1fc42d6c10" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42d6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d5020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b1fc42b3c50" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc42b3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b1fc42b2900" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc42b2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42b2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b1fc42e2678" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b1fc42e2678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42e29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b1fc42d9c10" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42d9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d8020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b1fc42d8470" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42d87c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42d8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b1fc42f4470" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc42f4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f49c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f4b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b1fc42e9908" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc42e9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42e9c58"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42e9de0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42e8020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42e81a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b1fc42ca900" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b1fc42ca900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42cac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b1fc42f7470" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc42f7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f77c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b1fc42f2d98" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc42f2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f1170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b1fc42f15c0" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b1fc42f15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f1910"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b1fc42c9c50" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc42c9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b1fc42ea470" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc42ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ea7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ea948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b1fc42f6470" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc42f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f67c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b1fc42f5470" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc42f5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f57c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b1fc42f1d60" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc42f1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f00d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b1fc42ee470" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b1fc42ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ee7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ee948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc42cc2a8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc42cc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc42cc5f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc42cc780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc42cc908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b1fc42fb638" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc42fb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b1fc42fbc50" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc42fbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fa0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b1fc42fa3a0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc42fa3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fa6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b1fc42fc900" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc42fc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b1fc42f6c10" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc42f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f5020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b1fc42f7c10" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc42f7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f6020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b1fc42ca2e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc42ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42ca638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b1fc42eec10" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b1fc42eec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ed020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b1fc42ebc10" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc42ebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ea020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b1fc42f0cc8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc42f0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ef0a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ef228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b1fc42ccbd0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc42ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b1fc42f8c50" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b1fc42f8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f7020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b1fc42f5c10" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc42f5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f4020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b1fc42eac10" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc42eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc42e9020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc42e91a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42e9330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc42e94b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc42e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b1fc42f0528" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc42f0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f0878"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b1fc42f4e10" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc42f4e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f21a8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b1fc42c9020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc42c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42c9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b1fc42f25f8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc42f25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42f2948"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42f2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc42cd5d8" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc42cd5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc42cd928"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc42cdab0"/>
        <function-ref name="request" scoped="" ref="0x2b1fc42cdc38"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc42cddc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc42cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b1fc42fa9b8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc42fa9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b1fc42f8638" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b1fc42f8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42f8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b1fc42eb470" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc42eb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42eb7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42eb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b1fc42edc10" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc42edc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42eb020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b1fc42fb020" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc42fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b1fc42ed470" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc42ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ed7c0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ed948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b1fc42c9638" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc42c9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42c9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b1fc42fc2e8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc42fc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42fc638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b1fc42f8020" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b1fc42f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc42f8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b1fc42ef4f0" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc42ef4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ef840"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ef9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b1fc42efc90" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b1fc42efc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc42ee020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc42ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b1fc42e4d30" loc="43:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1fc42e4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1fc43160d8"/>
        <function-ref name="changed" scoped="" ref="0x2b1fc4316260"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1fc43163e8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1fc4316570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc42fd780" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc42fd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc42fdad0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc42fdc58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc42fdde0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc4334020"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc43341a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc4334330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b1fc4331410" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b1fc4331410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc4331760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b1fc42feae0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b1fc42feae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc42fee30"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc42fd020"/>
        <function-ref name="modify" scoped="" ref="0x2b1fc42fd1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc42fd330"/>
        <function-ref name="resend" scoped="" ref="0x2b1fc42fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc42fe330" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc42fe330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc42fe680"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc42fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b1fc4331b18" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b1fc4331b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc4331e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b1fc4347020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b1fc4347020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b1fc4347370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b1fc43474f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b1fc4347680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b1fc4347808"/>
        <function-ref name="setCca" scoped="" ref="0x2b1fc4347990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b1fc4347b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b1fc43408c0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1fc43408c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc433fd40"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc433d458"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc433f660"/>
        <function-ref name="set" scoped="" ref="0x2b1fc433db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b1fc4346020" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b1fc4346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc4346370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b1fc4363c18" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc4363c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4362020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b1fc433b548" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b1fc433b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1fc433b898"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc433ba20"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc433bba8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1fc433bd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b1fc4345140" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b1fc4345140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4342918"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4344980"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4342310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4344e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4342da0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4344020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc43444f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b1fc4341280" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4341280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc43415d0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc4341758"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc43418e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc4341a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b1fc4365d20" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc4365d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43640a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4364228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b1fc43645c0" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc43645c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4364910"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4364a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b1fc435ce10" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc435ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc435f1a8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b1fc435f330"/>
        <function-ref name="sfd" scoped="" ref="0x2b1fc435f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc4348220" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc4348220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4348570"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc43486f8"/>
        <function-ref name="modify" scoped="" ref="0x2b1fc4348880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4348a08"/>
        <function-ref name="resend" scoped="" ref="0x2b1fc4348b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b1fc43664c8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc43664c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc4366818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc43669a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc4366b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b1fc43623c0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc43623c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4362710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b1fc4369368" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b1fc4369368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc43696b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc4369840"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc43699c8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4369b50"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4369cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4369e60"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4368020"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc43681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4349348" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4349348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4349698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc4341d98" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4341d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc4340170"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc43402f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b1fc436a850" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc436a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc436aba0"/>
        <function-ref name="isSet" scoped="" ref="0x2b1fc436ad28"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc433b020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc433b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b1fc4362ac0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc4362ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43610a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4361228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b1fc43676c0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1fc43676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4367a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc4367b98"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4367d20"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4366020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc43661a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b1fc433a0e0" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b1fc433a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc433a530"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc433a6b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc433a840"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc433a9c8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc433ab50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc433acd8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc433ae60"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4369020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b1fc4364e10" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc4364e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43631a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b1fc43684f0" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b1fc43684f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc4368840"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc43689c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc4368b50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc4368cd8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4368e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc4367020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc43671a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc4367330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc435f770" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc435f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc435fac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc435fc48"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc435fdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc435e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc435e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc435e330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc435e4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc435ead8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc435e640"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc435e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc435e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc4349988" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc4349988"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc4349cd8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4349e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b1fc4365020" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc4365020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc4365370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc43654f8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4365680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc4365808"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc4365990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b1fc4363528" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc4363528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4363878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b1fc4346768" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b1fc4346768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc4346ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b1fc43dfc90" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc43dfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43de3e8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43de570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b1fc440c470" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc440c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc440c7c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc440c948"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440cad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc440cc58"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc440cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b1fc43e8368" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b1fc43e8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e86b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b1fc43e2dd8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc43e2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43e1170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43e12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b1fc43dc7c0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc43dc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43dcb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43dcc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b1fc43db020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b1fc43db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43db370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43db4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b1fc43e7638" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc43e7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b1fc440d020" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc440d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc440d370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b1fc43e1d60" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc43e1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43e00d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43e0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b1fc43e0cc8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc43e0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43df0a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43df228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b1fc43db7c0" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc43db7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43dbb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43dbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b1fc4411020" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b1fc4411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4411370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc44114f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc43ebd38" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc43ebd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc43e90d8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc43e9260"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc43e93e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b1fc43e5020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc43e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b1fc43e5638" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc43e5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b1fc43e5d50" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc43e5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b1fc43e62e8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc43e62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b1fc43e0528" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc43e0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43e0878"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43e0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b1fc43e15c0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc43e15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43e1910"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43e1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b1fc43e9cc8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc43e9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b1fc44117c0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b1fc44117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4411b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4411c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b1fc440e7c0" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc440e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc440eb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b1fc44137c0" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc44137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4413b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4413c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b1fc43e96b0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc43e96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b1fc43e2638" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b1fc43e2638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43e2988"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43e2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b1fc43df4f0" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc43df4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43df840"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43df9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b1fc440d7c0" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc440d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc440db10"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc440dc98"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440de20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc440c020"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc440c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b1fc4413020" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc4413020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4413370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc44134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b1fc43de838" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc43de838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43deb88"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43ded10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b1fc43e8980" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc43e8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b1fc43dc020" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc43dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc43dc370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc43dc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc43eb140" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc43eb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc43eb490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc43eb618"/>
        <function-ref name="request" scoped="" ref="0x2b1fc43eb7a0"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc43eb928"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc43ebab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b1fc43e33a0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc43e33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b1fc43e2020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b1fc43e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b1fc440e020" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc440e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc440e370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b1fc440f7c0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc440f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc440fb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b1fc43e6900" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc43e6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b1fc440f020" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc440f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc440f370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc440f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b1fc43e7020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc43e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b1fc43e7c50" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc43e7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b1fc43e39b8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b1fc43e39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc43e3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b1fc4412020" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc4412020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4412370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc44124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b1fc44127c0" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b1fc44127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4412b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4412c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b1fc4402080" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc4402080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc44023d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b1fc4402558"/>
        <function-ref name="sfd" scoped="" ref="0x2b1fc44026e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc44029b0" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc44029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc4402d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b1fc4401158" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b1fc4401158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc44014a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc4405838" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc4405838"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc4405b88"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4405d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b1fc43fae30" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b1fc43fae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc43f91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc43f9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc43f94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc43f9640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc43f97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc43f9950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc43f9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc43f9c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b1fc442db30" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b1fc442db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b1fc442de80"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b1fc442c030"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b1fc442c1b8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b1fc442c340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b1fc442c4c8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b1fc442c650"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1fc442c7d8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b1fc442c960"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b1fc442cae8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b1fc442cc70"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b1fc442cdf8"/>
        <function-ref name="sync" scoped="" ref="0x2b1fc442b020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1fc442b1a8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b1fc442b430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b1fc441b2a0" loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b1fc441b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc441b5f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc441b778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b1fc43f8020" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b1fc43f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc43f8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc43f84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc43f8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc43f8808"/>
        <function-ref name="get" scoped="" ref="0x2b1fc43f8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc43f8b18"/>
        <function-ref name="set" scoped="" ref="0x2b1fc43f8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc43f8e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b1fc442b9f8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1fc442b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc442ae60"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc4428568"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc442a780"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4428c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b1fc442e778" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc442e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc442eac8"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc442ec50"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc442edd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc442d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b1fc43fd4b8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b1fc43fd4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc43fd808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b1fc43fd990"/>
        <function-ref name="sfd" scoped="" ref="0x2b1fc43fdb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b1fc442f830" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc442f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc442fb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b1fc43fbc10" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b1fc43fbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1fc43fa020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1fc43fa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1fc43fa330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1fc43fa4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc43fa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1fc43fa7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc43fa950"/>
        <function-ref name="clr" scoped="" ref="0x2b1fc43faad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc43fe638" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc43fe638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc43fe988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc442d350" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc442d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc442d6a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc442d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc43fdde8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc43fdde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc43fb170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b1fc43f7db0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1fc43f7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc4430170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc44302f8"/>
        <function-ref name="request" scoped="" ref="0x2b1fc4430480"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc4430608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc4430790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b1fc4430b00" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc4430b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc4430e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc442f020"/>
        <function-ref name="write" scoped="" ref="0x2b1fc442f1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc442f330"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc442f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b1fc43fb578" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b1fc43fb578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b1fc43fb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc4427480" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc4427480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc44277d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc4427958"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc4427ae0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc4427c68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc4427df0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4426020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc44261a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc44267c8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4426330"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc44264b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc4426640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b1fc43f7238" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b1fc43f7238"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1fc43f7588"/>
        <function-ref name="disable" scoped="" ref="0x2b1fc43f7710"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b1fc43f7898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b1fc43f7a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b1fc442e020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc442e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc442e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc43fec78" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc43fec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc43fd020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc43fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1fc4476df8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc4476df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1fc4475170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b1fc4477020" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc4477020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc4477370"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc44774f8"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc4477680"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc4477808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b1fc4475808" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc4475808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc4474c78"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc4472380"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc4474598"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4472a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b1fc4476620" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4476620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc4476970"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc4476af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b1fc446d190" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc446d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc446d4e0"/>
        <function-ref name="isSet" scoped="" ref="0x2b1fc446d668"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc446d7f0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc446d978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1fc4471670" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc4471670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc4470ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc446e1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc44703f0"/>
        <function-ref name="set" scoped="" ref="0x2b1fc446e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b1fc4477ba0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b1fc4477ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc4476020"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc44761a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc4476330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1fc44a37f8" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1fc44a37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1fc44a3b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b1fc446c918" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b1fc446c918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b1fc446cc68"/>
        <function-ref name="getRssi" scoped="" ref="0x2b1fc446cdf0"/>
        <function-ref name="getPower" scoped="" ref="0x2b1fc44a5020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b1fc44a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1fc449a7a0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc449a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc449aaf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc449ac78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc449ae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4499020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc44991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b1fc44a2218" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b1fc44a2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc44a1700"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc44a1de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc44a1020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc44a04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b1fc44a3020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc44a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc44a3370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc44a34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b1fc449cbd0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1fc449cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc449a020"/>
        <function-ref name="isSet" scoped="" ref="0x2b1fc449a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc449a330"/>
        <function-ref name="set" scoped="" ref="0x2b1fc449a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b1fc4496a50" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b1fc4496a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4498658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b1fc4498ce8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1fc4498ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc44978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1fc449e130" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1fc449e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1fc449d588"/>
        <function-ref name="clear" scoped="" ref="0x2b1fc449dc68"/>
        <function-ref name="isValid" scoped="" ref="0x2b1fc449ee80"/>
        <function-ref name="set" scoped="" ref="0x2b1fc449c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b1fc44a5540" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b1fc44a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc44a5890"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc44a5a18"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc44a5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1fc44d5c38" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1fc44d5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc44d4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1fc44d4e48" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc44d4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883608"/>
            <typename><typedef-ref name="T32khz" ref="0x2b1fc3883960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc44c9be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc44c8548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc44c80c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc44c89d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b1fc44f3a98" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc44f3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc44f1d60"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc44fd470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc44f11c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc44fdd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc44f0648"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc44f01f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc44fd8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc44fe620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc44f1790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc44feac0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc44fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1fc44f0c08" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1fc44f0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc44ee820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc44c6518" loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc44c6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc44c6868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b1fc44e50f0" loc="29:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b1fc44e50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc44e5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc44e4798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc44e4310"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc44e4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc44ea2c0" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc44ea2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc44ea610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b1fc44eac38" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1fc44eac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc44e6410"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc44e84a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc44e8db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc44e8930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc44e6898"/>
        <function-ref name="start" scoped="" ref="0x2b1fc44e99f0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc44e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4572020" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4570690"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc45716f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4570088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4571b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4570b18"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4572d70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4571270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc45737d8" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc45737d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4573b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc456e128" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc456e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc456ee78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc456d7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc456d330"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc456dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b1fc5056b60" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc5056b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b1fc5055020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc50551a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc5055330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc50554b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc5055640"/>
        <function-ref name="setControl" scoped="" ref="0x2b1fc50557c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1fc4ff78e8" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc4ff78e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4ff3020"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4ff5020"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc4ff5930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4ff54a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc4ff34a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4ff6660"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4ff6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4ff7140" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4ff7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4ff7490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc4ff3a90" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4ff3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4ff2828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4ff1190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4ff2cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4ff1618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b1fc5051bb0" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1fc5051bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b1fc5050020"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b1fc50501a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b1fc5050330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1fc50504b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1fc5050640"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1fc50507c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b1fc5055b58" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1fc5055b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc5051310"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc50520c0"/>
        <function-ref name="get" scoped="" ref="0x2b1fc5053728"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc5052548"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc5051798"/>
        <function-ref name="set" scoped="" ref="0x2b1fc5053bb0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc50529d0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc5052e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1fc4ff1b98" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4ff1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc5057db8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc50574a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ff0760"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc5056270"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc5056748"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc5058580"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc50580f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc5057930"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ff0be8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc5058a08"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc5057020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b1fc45bb5e8" loc="63:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b1fc45bb5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc45bb938"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc45bbac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b1fc457f648" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1fc457f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc457dcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc457ed50"/>
        <function-ref name="startAt" scoped="" ref="0x2b1fc457d6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc457d230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1fc45bb190"/>
        <function-ref name="start" scoped="" ref="0x2b1fc457e3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc457e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc4584290" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4584290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc45805f0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4583ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc45828c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc4582470"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc457f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc4580a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4582020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc4584dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc4580020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc45832b8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4583758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b1fc45ed618" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b1fc45ed618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc45ed968"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc45edaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b1fc45f25a0" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b1fc45f25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc45ee8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc45f0020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc45f0d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc45f08c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc45ed1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc45eed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc45f0470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc45f1118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc45ee320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc45f15b8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc45f1a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc45f80c8" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc45f80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc45f4610"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc45f7a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc45f5900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc45f5490"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc45f2020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc45f4a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc45f5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc45f8c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc45f4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc45f7118"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc45f75d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1fc45ebc38" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1fc45ebc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc45ea820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1fc45eae48" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc45eae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc45e8be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc45e7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc45e70c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc45e79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc45e2420" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc45e2420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc460f6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4611db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc4610ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc4610688"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc460e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc460fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc4610238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc4611020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc460f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc46114c0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4611960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b1fc461a7d8" loc="38:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b1fc461a7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3884e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1fc38831f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1fc4616a18"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4617158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1fc4617e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1fc46179f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b1fc46152e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b1fc4616e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1fc46175a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1fc4619370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1fc4616448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1fc4619810"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4619cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b1fc45fec90" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b1fc45fec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45fd3e8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45fd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b1fc4634470" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b1fc4634470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc46347c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc4634948"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4634ad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc4634c58"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc4634de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b1fc46082e8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b1fc46082e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4608638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b1fc4602dd8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b1fc4602dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4600170"/>
        <function-ref name="write" scoped="" ref="0x2b1fc46002f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b1fc463e7c0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b1fc463e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463eb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b1fc463d020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b1fc463d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463d370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b1fc4607638" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b1fc4607638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4607988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b1fc4636020" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b1fc4636020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4636370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc46364f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b1fc4600d60" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b1fc4600d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45ff0d8"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45ff260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b1fc45ffcc8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b1fc45ffcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45fe0a0"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45fe228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b1fc463d7c0" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b1fc463d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463db10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b1fc4639020" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b1fc4639020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4639370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc46394f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b1fc460acb8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b1fc460acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b1fc46090a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b1fc4609228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b1fc46093b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b1fc4604020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b1fc4604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4604370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b1fc4604638" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b1fc4604638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4604a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b1fc4604d50" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b1fc4604d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc46030d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b1fc46052e8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b1fc46052e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4605638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b1fc45ff528" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b1fc45ff528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45ff878"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45ffa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b1fc46005c0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b1fc46005c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4600910"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4600a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b1fc4609c90" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b1fc4609c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4608020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b1fc46397c0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b1fc46397c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4639b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4639c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b1fc46377c0" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b1fc46377c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4637b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4637c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b1fc463c7c0" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b1fc463c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463cb10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b1fc4609678" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b1fc4609678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc46099c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b1fc4602638" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b1fc4602638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4602988"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4602b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b1fc45fe4f0" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b1fc45fe4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45fe840"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45fe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b1fc46367c0" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b1fc46367c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b1fc4636b10"/>
        <function-ref name="writeDone" scoped="" ref="0x2b1fc4636c98"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4636e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b1fc4634020"/>
        <function-ref name="readDone" scoped="" ref="0x2b1fc46341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b1fc463c020" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b1fc463c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463c370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b1fc45fd838" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b1fc45fd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc45fdb88"/>
        <function-ref name="write" scoped="" ref="0x2b1fc45fdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b1fc4608900" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b1fc4608900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4608c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b1fc463e020" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b1fc463e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463e370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1fc460a0c0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1fc460a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1fc460a410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1fc460a598"/>
        <function-ref name="request" scoped="" ref="0x2b1fc460a720"/>
        <function-ref name="granted" scoped="" ref="0x2b1fc460a8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1fc460aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b1fc46033a0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b1fc46033a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc46036f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b1fc4602020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b1fc4602020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4602370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b1fc4637020" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b1fc4637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4637370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc46374f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b1fc46387c0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b1fc46387c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4638b10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc4638c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b1fc4605900" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b1fc4605900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4605c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b1fc4638020" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b1fc4638020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc4638370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc46384f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b1fc4607020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b1fc4607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4607370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b1fc4607c50" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b1fc4607c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4605020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b1fc46039b8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b1fc46039b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b1fc4603d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b1fc463a020" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b1fc463a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463a370"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b1fc463a7c0" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b1fc463a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b1fc463ab10"/>
        <function-ref name="write" scoped="" ref="0x2b1fc463ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b1fc4659530" loc="35:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1fc4659530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1fc4659880"/>
        <function-ref name="rand32" scoped="" ref="0x2b1fc4659a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b1fc46564c0" loc="34:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b1fc46564c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4659088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc465c738" loc="33:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc465c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc465ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b1fc4651320" loc="37:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1fc4651320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1fc4651670"/>
        <function-ref name="rand32" scoped="" ref="0x2b1fc46517f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b1fc46522b8" loc="36:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b1fc46522b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4652e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4655a28" loc="35:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4655a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4655d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc465a978" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc465a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc465acc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc465ae50"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc4653020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc46531a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc4653330"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc46534b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc4680838" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc4680838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4680b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4680d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc467e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc467e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc467e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc463fa08" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc463fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc463fd58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4680020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46801a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4680330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46804b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc467a578" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc467a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc467a8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc467aa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc467abd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc467ad60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4679020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc467b298" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc467b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc467b5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc467b770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc467b8f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc467ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc467bc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1fc4678080" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1fc4678080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1fc46783d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b1fc4678558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc467be80" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc467be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc467a1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc4678848" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc4678848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc4678b98"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc4678d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b1fc46792a0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc46792a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc46795f0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc4679778"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc4679900"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc4679a88"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc4679c10"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc4679d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc467c2b8" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc467c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc467c608"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc467c790"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc467c918"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc467caa0"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc467cc28"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc467cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc4662b20" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc4662b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc4662e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc4681d20" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc4681d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46620a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b1fc4662418" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b1fc4662418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc4662768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc46a0458" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46a0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46a07a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc46a1cb0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc46a1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc46a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc46a1020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc46a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46a1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc46a0a98" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc46a0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc46a0de8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc469f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b1fc46a16e8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b1fc46a16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46a1a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc46c5e50" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46c41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc46c44e8" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46c4838"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46c49c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46c4b48"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46c4cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46c4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc4663a48" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc4663a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4663d98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46c5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46c51a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46c5330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc46c5748" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc46c5748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46c5a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc46bd020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc46bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46bd370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46bd4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46bd680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46bd808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46bd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc46bdcc8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46bdcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46bc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc46c0020" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc46c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46c0370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46c04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46c0680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46c0808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46c0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x2b1fc46be8d0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x2b1fc46be8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46bec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b1fc46bc390" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b1fc46bc390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b1fc46bc6e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b1fc46bc868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc46c0c20" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc46c0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc46e8da0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc46e8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc46e7170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc46e72f8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc46e7480"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc46e7608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc46e6838" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc46e6838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46e6b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46e6d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46e5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46e51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46e5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc46e5668" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc46e5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46e59b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc46a8660" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc46a8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46a89b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46a8b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46a8cc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46a8e48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1fc46a58f8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc46a58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b1fc46a5c48"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b1fc46a5dd0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b1fc46e8020"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b1fc46e81a8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b1fc46e8330"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b1fc46e84b8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b1fc46e8640"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b1fc46e87c8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b1fc46e8950"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b1fc46e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b1fc46e7928" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b1fc46e7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc46e7c78"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc46e7e00"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc46e6020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc46e61a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc46e6330"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc46e64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b1fc46e5d28" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b1fc46e5d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc46e40a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc46e4228"/>
        <function-ref name="start" scoped="" ref="0x2b1fc46e43b0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc46e4538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc46a52b0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc46a52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc46a5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1fc46e1170" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1fc46e1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b1fc46e14c0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b1fc46e1648"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b1fc46e17d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b1fc46e1958"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b1fc46e1ae0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b1fc46e1c68"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b1fc46e1df0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b1fc46e0020"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b1fc46e01a8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b1fc46e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b1fc46e3e38" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b1fc46e3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b1fc46e21c0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b1fc46e2348"/>
        <function-ref name="isState" scoped="" ref="0x2b1fc46e24d0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b1fc46e2658"/>
        <function-ref name="requestState" scoped="" ref="0x2b1fc46e27e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b1fc46e2968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc46c99c0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc46c99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46c9d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46c8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46c81a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46c8330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc46ca020" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc46ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc46ca370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc46ca4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc46ca680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc46ca808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc46ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1fc46cac40" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1fc46cac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1fc46c9020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1fc46c91a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1fc46c9330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1fc46c94b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1fc46c9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b1fc4709d98" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc4709d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc4708170"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc47082f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc4708480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1fc4709080" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1fc4709080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1fc47093d0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1fc4709558"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1fc47096e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1fc4709868"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1fc47099f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc478e390" loc="41:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc478e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc478e6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc478e868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc478e9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc478eb78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc478ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc478d020" loc="42:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc478d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc478d370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc478d4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc478d680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc478d808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc478d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc478dbd8" loc="43:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc478dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc478c020"/>
        <function-ref name="source" scoped="" ref="0x2b1fc478c1a8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc478c330"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc478c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc478c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc478c7c8"/>
        <function-ref name="type" scoped="" ref="0x2b1fc478c950"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc478cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc478cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc478cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc478b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b1fc478b2a8" loc="44:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.DataSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b1fc478b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc478b5f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc478b780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc478b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc50993e0" loc="36:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc50993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc5099730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc50998b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc5099a40"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc5099bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc5099d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b1fc5098020" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc5098020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc5098370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc50984f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc5098680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc5098808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc5098990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1fc5098bd8" loc="39:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.DataSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc5098bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc5097020"/>
        <function-ref name="source" scoped="" ref="0x2b1fc50971a8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc5097330"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc50974b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc5097640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc50977c8"/>
        <function-ref name="type" scoped="" ref="0x2b1fc5097950"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc5097ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc5097c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc5097de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc5096020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc47129a8" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc47129a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4712cf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4712e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc470f030"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc470f1b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc470f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b1fc4754a08" loc="40:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc4754a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4754d78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4753020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47531a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4753330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc47534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc4755b98" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc4755b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4754020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47541a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4754330"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc47544b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4754640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1fc4799d20" loc="42:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc4799d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc47980a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4798228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47983b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4798538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc47986c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b1fc4798988" loc="161:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b1fc4798988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4798cd8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4798e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b1fc4797160" loc="118:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b1fc4797160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc47974b0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4797638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1fc4753700" loc="41:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4753700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4753a50"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4753bd8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4753d60"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4799020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc47991a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc4799330"/>
        <function-ref name="type" scoped="" ref="0x2b1fc47994b8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc4799640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc47997c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc4799950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4799ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc4782a28" loc="38:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkAppC.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc4782a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4782d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4781020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47811a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4781330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc47814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc4782490" loc="37:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkAppC.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc4782490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc47827e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc4781700" loc="39:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkAppC.DataReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4781700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4781a50"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4781bd8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4781d60"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4780020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc47801a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc4780330"/>
        <function-ref name="type" scoped="" ref="0x2b1fc47804b8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc4780640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc47807c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc4780950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4780ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc477c240" loc="35:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc477c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc477c590"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc477c718"/>
        <function-ref name="start" scoped="" ref="0x2b1fc477c8a0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc477ca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc477b1c8" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc477b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc477b518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc477b6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc477b828"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc477b9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc477bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc47798d8" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc47798d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4779c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4779db0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4778020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47781a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc4778330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc4779300" loc="37:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc4779300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc4779650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc4776608" loc="42:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc4776608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc4776958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc4776ae0"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc4776c68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc4776df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc47bd020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc47bd1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc47bd330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc47bd950"/>
        <function-ref name="set" scoped="" ref="0x2b1fc47bd4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc47bd640"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc47bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1fc4777c78" loc="40:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc4777c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc4776020"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc47761a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc4776330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc47785d0" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47785d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4778920"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4778aa8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4778c30"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4778db8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc4777020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc47771a8"/>
        <function-ref name="type" scoped="" ref="0x2b1fc4777330"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc47774b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc4777640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc47777c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4777950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1fc47f6308" loc="43:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1fc47f6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc47f6658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47f67e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47f6968"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc47f6af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc47f6c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1fc47f5020" loc="44:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1fc47f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc47f5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc47ba460" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc47ba460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc47ba7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47ba958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47baae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc47bac68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc47badf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc47f8d20" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc47f8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc47f70a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc47f7228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47f73b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47f7538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc47f76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc47f9180" loc="37:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc47f9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc47f94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1fc47f7908" loc="40:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1fc47f7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc47f7c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc47f7de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc47f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc47f9738" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc47f9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc47f9a88"/>
        <function-ref name="source" scoped="" ref="0x2b1fc47f9c10"/>
        <function-ref name="address" scoped="" ref="0x2b1fc47f9d98"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc47f8020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc47f81a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc47f8330"/>
        <function-ref name="type" scoped="" ref="0x2b1fc47f84b8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc47f8640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc47f87c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc47f8950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc47f8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc47f0728" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc47f0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc47f0a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc47f0c00"/>
        <function-ref name="start" scoped="" ref="0x2b1fc47f0d88"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc47ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc47ee208" loc="41:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc47ee208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc47ee558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc47ee6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc47ee868"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc47ee9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc47eeb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc47f0110" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc47f0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc47f0460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc47ef760" loc="40:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc47ef760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc47efab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc47ec8f8" loc="45:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc47ec8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc47ecc48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc47ecdd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc47eb020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc47eb1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc47eb330"/>
        <function-ref name="get" scoped="" ref="0x2b1fc47eb4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc47eb640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc47ebc60"/>
        <function-ref name="set" scoped="" ref="0x2b1fc47eb7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc47eb950"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc47ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b1fc47ec020" loc="44:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1fc47ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1fc47ec370"/>
        <function-ref name="offset" scoped="" ref="0x2b1fc47ec4f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1fc47ec680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1fc47e7cf8" loc="64:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1fc47e7cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1fc47e40a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1fc47e4228"/>
        <function-ref name="start" scoped="" ref="0x2b1fc47e43b0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc47e4538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b1fc485f020" loc="326:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b1fc485f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc485f370"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc485f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b1fc481d398" loc="72:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b1fc481d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc481d6e8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc481d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b1fc484a020" loc="189:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b1fc484a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc484a370"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc484a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc47e76e0" loc="63:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc47e76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc47e7a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b1fc481ae40" loc="73:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b1fc481ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b1fc481c1c0"/>
        <function-ref name="flush" scoped="" ref="0x2b1fc481c348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b1fc4861020" loc="320:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b1fc4861020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4861370"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc48614f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b1fc481eb38" loc="70:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1fc481eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b1fc4826020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b1fc48261a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b1fc4826330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b1fc48264b8"/>
        <function-ref name="putData" scoped="" ref="0x2b1fc4826640"/>
        <function-ref name="putDone" scoped="" ref="0x2b1fc48267c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b1fc4826950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc4826bc8" loc="71:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc4826bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc4823020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc48231a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc4823330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc48234b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc4823640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc48237c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc4823950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc481d020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4823ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc4823c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc4823de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b1fc485b0c0" loc="335:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b1fc485b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc485b410"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc485b598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b1fc4827898" loc="65:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b1fc4827898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b1fc4827be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b1fc4827d70"/>
        <function-ref name="startSend" scoped="" ref="0x2b1fc47e3020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b1fc47e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b1fc4824b48" loc="66:/opt/tinyos-2.1.0/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1fc4824b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b1fc47e2020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b1fc47e21a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b1fc47e2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b1fc4919908" loc="264:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b1fc4919908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4919c58"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4919de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc491e6f8" loc="40:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc491e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc491ea68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc491ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc491ed78"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc491d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc491d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b1fc4918100" loc="147:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b1fc4918100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4918450"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc49185d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc491e020" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc491e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc491e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b1fc491d5b0" loc="43:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b1fc491d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1fc392d8a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1fc491d920"/>
        <function-ref name="offset" scoped="" ref="0x2b1fc491daa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1fc491dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc491a268" loc="46:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc491a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc491a5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc491a740"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc491a8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc491aa50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc491abd8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc491ad60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc4919020"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc4919640"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4919330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc49191a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc49194b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b1fc491b750" loc="45:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b1fc491b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b1fc491baa0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b1fc491bc28"/>
        <function-ref name="startSend" scoped="" ref="0x2b1fc491bdb0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b1fc491a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b1fc491de78" loc="44:/opt/tinyos-2.1.0/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1fc491de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b1fc491b1f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b1fc491b380"/>
        <function-ref name="endPacket" scoped="" ref="0x2b1fc491b508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b1fc4957c98" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1fc4957c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4912020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1fc49121a8"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc4912330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1fc49124b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1fc4912640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1fc49127c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4912950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b1fc4914328" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1fc4914328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b1fc4914678"/>
        <function-ref name="resetSend" scoped="" ref="0x2b1fc4914800"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b1fc4914988"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b1fc4914b10"/>
        <function-ref name="putData" scoped="" ref="0x2b1fc4914c98"/>
        <function-ref name="putDone" scoped="" ref="0x2b1fc4914e20"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b1fc4913020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1fc4912bc8" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1fc4912bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1fc4911020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1fc49111a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b1fc4911330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1fc49114b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1fc4911640"/>
        <function-ref name="get" scoped="" ref="0x2b1fc49117c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1fc4911950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1fc4955020"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4911ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1fc4911c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b1fc4911de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1fc4936738" loc="42:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1fc4936738"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4936a88"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc4936c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1fc493c498" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1fc493c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc493c7e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1fc493c970"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc493caf8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1fc493cc80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1fc493ce08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1fc493b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc493b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc4916c70" loc="40:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc4916c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc493c020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc493c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1fc4934020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1fc4934020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4934370"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc49344f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1fc49347e8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1fc49347e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4934b38"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1fc4934cc0"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc4934e48"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1fc4981020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1fc49811a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1fc4981330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc49814b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1fc4981a30" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4981a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1fc3881178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc49807a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc497e0f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4980c30"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc497e580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc493a7f0" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc493a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc493ab40"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc493acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1fc497ce58" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1fc497ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc498a1e8"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc498a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b1fc49895f8" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b1fc49895f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc4989948"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4989ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc497c120" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc497c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc497c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1fc498a5f8" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1fc498a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc498a948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1fc498aad0"/>
        <function-ref name="receive" scoped="" ref="0x2b1fc498ac58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1fc498ade0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1fc4989020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1fc49891a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4989330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1fc4987c60" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4987c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1fc3881178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc49859f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4984330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4985e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc49847b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b1fc49885c0" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b1fc49885c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1fc4988910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1fc4988a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1fc4988c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b1fc4988da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1fc4987020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1fc49871a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1fc4987330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1fc49874b8"/>
        <function-ref name="tx" scoped="" ref="0x2b1fc4987640"/>
        <function-ref name="rx" scoped="" ref="0x2b1fc49877c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1fc497c6f8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1fc497c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc497ca48"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc497cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b1fc4989d98" loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b1fc4989d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc4988170"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49882f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b1fc49ba388" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b1fc49ba388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1fc49ba6d8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1fc49ba860"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1fc49ba9e8"/>
        <function-ref name="txDone" scoped="" ref="0x2b1fc49bab70"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1fc49bacf8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1fc49bae80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1fc49b9030"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1fc49b91b8"/>
        <function-ref name="tx" scoped="" ref="0x2b1fc49b9340"/>
        <function-ref name="rx" scoped="" ref="0x2b1fc49b94c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b1fc49b8930" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b1fc49b8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1fc49b8c80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1fc49b8e08"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1fc49b7020"/>
        <function-ref name="txDone" scoped="" ref="0x2b1fc49b71a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1fc49b7330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1fc49b74b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1fc49b7640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1fc49b77c8"/>
        <function-ref name="tx" scoped="" ref="0x2b1fc49b7950"/>
        <function-ref name="rx" scoped="" ref="0x2b1fc49b7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b1fc49bb9e8" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1fc49bb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49bbd38"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b1fc49b9848" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1fc49b9848"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b9b98"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b1fc49b80f0" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1fc49b80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b8440"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b85c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b1fc49bb190" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1fc49bb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49bb4e0"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49bb668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b1fc49b6788" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b1fc49b6788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc49b6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b1fc49b2158" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b1fc49b2158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1fc49b24a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1fc49b2630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1fc49b27b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b1fc49b2940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1fc49b2ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1fc49b2c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1fc49b2dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1fc49b1020"/>
        <function-ref name="tx" scoped="" ref="0x2b1fc49b11a8"/>
        <function-ref name="rx" scoped="" ref="0x2b1fc49b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b1fc49b1688" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b1fc49b1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc49b19d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b1fc49af020" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b1fc49af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1fc49af370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1fc49af4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1fc49af680"/>
        <function-ref name="txDone" scoped="" ref="0x2b1fc49af808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1fc49af990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1fc49afb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1fc49afca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1fc49afe28"/>
        <function-ref name="tx" scoped="" ref="0x2b1fc49ae020"/>
        <function-ref name="rx" scoped="" ref="0x2b1fc49ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b1fc49b38b8" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1fc49b38b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b3c08"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b1fc49b1d98" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1fc49b1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b0170"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b02f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b1fc49b06b8" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1fc49b06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b0a08"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b1fc49ae4c8" loc="81:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1fc49ae4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1fc49ae818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1fc49ae9a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1fc49aeb28"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1fc49aecb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1fc49aee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b1fc49ad1a8" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1fc49ad1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1fc49ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b1fc49b3020" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1fc49b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1fc49b3370"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc49b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc4a48a68" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4a48a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1fc3881178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4a44828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4a43190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4a44cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4a43618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc4a427d8" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4a427d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TThree" ref="0x2b1fc38b9218"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4a3f578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4a3e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4a3fa00"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4a3e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc4a355d0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc4a355d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc4a35920"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b1fc4a35aa8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc4a35c30"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b1fc4a35db8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc4a34020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc4a341a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b1fc4a34330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b1fc4a344b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b1fc4a34640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b1fc4a347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1fc4a34ca0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1fc4a34ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1fc4a30e20"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4a30510"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a33858"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc4a32238"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a32710"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a30998"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a33ce0"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a32b98"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a30088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1fc4a2fa20" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1fc4a2fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc4a2b270"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4a2d020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a2e5d8"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a2d4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a2b6f8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a2ea60"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a2d930"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a2ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc4a3a538" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4a3a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc4a376f8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4a38db8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a390f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc4a37b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc4a35088"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a38020"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4a39a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a37270"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a39580"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a384a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a38930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1fc4a75838" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1fc4a75838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1fc4a75b88"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b1fc4a75d10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1fc4a74020"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b1fc4a741a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1fc4a74330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1fc4a744b8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b1fc4a74640"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b1fc4a747c8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b1fc4a74950"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b1fc4a74ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b1fc4a6f938" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b1fc4a6f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc4a6b0f8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4a6de40"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a6d4e0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a6c310"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a6b580"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a6d968"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a6c798"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a6cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1fc4a72020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1fc4a72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1fc4a6f270"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4a70930"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a72ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b1fc4a71560"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a71a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a70db8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a71088"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a70020"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a704a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b1fc4a6bbf8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b1fc4a6bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc4a674a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4a68130"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a6a7a0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a685b8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a67930"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a6ac28"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a68a40"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b1fc4a66020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b1fc4a66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1fc4a637a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1fc4a64560"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a66ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a649e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a63c30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a64088"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a64e70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a63320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1fc4a2a7a8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4a2a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc4a76930"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4a76020"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4a793a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc4a76db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc4a752f0"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4a771f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4a79d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4a764a8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4a79830"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4a77680"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4a77b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1fc4adbbc8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1fc4adbbc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1fc3808d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1fc4ada020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1fc4ada3f0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4ada3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc4ad6580"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4ad7c20"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ad9020"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc4ad6a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc4ad5020"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4ad9e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4ad9980"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4ad60f8"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ad94a8"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4ad7310"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4ad7798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc4ad3ce0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4ad3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TThree" ref="0x2b1fc38b9218"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4ad2ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4ad14a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4ad1020"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4ad1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1fc4ad0020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1fc4ad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1fc4b210f8"/>
        <function-ref name="test" scoped="" ref="0x2b1fc4b227a8"/>
        <function-ref name="get" scoped="" ref="0x2b1fc4ad0ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b1fc4b21580"/>
        <function-ref name="getScale" scoped="" ref="0x2b1fc4b21a58"/>
        <function-ref name="reset" scoped="" ref="0x2b1fc4ace9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4ace560"/>
        <function-ref name="isOn" scoped="" ref="0x2b1fc4b22c30"/>
        <function-ref name="set" scoped="" ref="0x2b1fc4ace088"/>
        <function-ref name="start" scoped="" ref="0x2b1fc4acee70"/>
        <function-ref name="stop" scoped="" ref="0x2b1fc4b22320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b1fc4b1ac80" loc="52:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b1fc4b1ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TThree" ref="0x2b1fc38b9218"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4b19a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4b184a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4b18020"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4b18930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1fc4b1da60" loc="51:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1fc4b1da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1fc3883d70"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1fc3881178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1fc4b1c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1fc4b1a190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1fc4b1ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1fc4b1a618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b1fc4b106e0" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b1fc4b106e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1fc4b10a30"/>
        <function-ref name="offset" scoped="" ref="0x2b1fc4b10bb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1fc4b10d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc4b381d0" loc="41:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BlinkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc4b381d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4b38520"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b386a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b38830"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4b389b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4b38b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc4b38d88" loc="42:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BlinkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc4b38d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4b36170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4b362f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b36480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b36608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc4b36790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc4b369d8" loc="43:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BlinkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b369d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4b36d28"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4b35020"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4b351a8"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4b35330"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc4b354b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc4b35640"/>
        <function-ref name="type" scoped="" ref="0x2b1fc4b357c8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc4b35950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc4b35ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc4b35c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4b35de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b1fc4b340a0" loc="44:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BlinkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b1fc4b340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1fc4b343f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b1fc4b34578"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1fc4b34700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1fc51cb600" loc="36:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.SerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc51cb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc51cb950"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc51cbad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc51cbc60"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc51cbde8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc51ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b1fc51ca2c8" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.SerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc51ca2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc51ca618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc51ca7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc51ca928"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc51caab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc51cac38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1fc51cae80" loc="39:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.SerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc51cae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc51c81f8"/>
        <function-ref name="source" scoped="" ref="0x2b1fc51c8380"/>
        <function-ref name="address" scoped="" ref="0x2b1fc51c8508"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc51c8690"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc51c8818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc51c89a0"/>
        <function-ref name="type" scoped="" ref="0x2b1fc51c8b28"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc51c8cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc51c8e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc51c7020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc51c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc4b48440" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc4b48440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4b48790"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b48918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b48aa0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4b48c28"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4b48db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b1fc4b44ac0" loc="40:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1fc4b44ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4b44e30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b43020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b431a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4b43330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4b434b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1fc4b45d20" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1fc4b45d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1fc4b440d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b44260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b443e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1fc4b44570"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1fc4b446f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1fc4b42d20" loc="42:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc4b42d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4b410a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4b41228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b413b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b41538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc4b416c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b1fc4b41988" loc="161:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b1fc4b41988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4b41cd8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4b41e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b1fc4b40160" loc="118:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b1fc4b40160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1fc4b404b0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1fc4b40638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1fc4b43700" loc="41:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b43700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4b43a50"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4b43bd8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4b43d60"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4b42020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc4b421a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc4b42330"/>
        <function-ref name="type" scoped="" ref="0x2b1fc4b424b8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc4b42640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc4b427c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc4b42950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4b42ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1fc4b2c7b8" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkAppC.SerialReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1fc4b2c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1fc4b2cb08"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1fc4b2cc90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1fc4b2ce18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1fc4b2b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1fc4b2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1fc4b2c220" loc="37:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkAppC.SerialReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1fc4b2c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1fc4b2c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1fc4b2b3f0" loc="39:/opt/tinyos-2.1.0/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="BlinkAppC.SerialReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1fc4b2b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1fc4b2b740"/>
        <function-ref name="source" scoped="" ref="0x2b1fc4b2b8c8"/>
        <function-ref name="address" scoped="" ref="0x2b1fc4b2ba50"/>
        <function-ref name="destination" scoped="" ref="0x2b1fc4b2bbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1fc4b2bd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1fc4b2a020"/>
        <function-ref name="type" scoped="" ref="0x2b1fc4b2a1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b1fc4b2a330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1fc4b2a4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1fc4b2a640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1fc4b2a7c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b1fc3942588" loc="51:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b1fc3943258" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b1fc3947408" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b1fc3947198" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b1fc394cb98" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b1fc39495b8" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b1fc3949348" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b1fc39480a8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b1fc3949dd0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b1fc39488f0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b1fc395eab0" loc="33:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b1fc395c1d8" loc="34:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b1fc395fd20" loc="31:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b1fc3969020" loc="36:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1fc395e400" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b1fc395c890" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc395f020" loc="29:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b1fc395f690" loc="30:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b1fc380e3a0" loc="46:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b1fc380c290" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b1fc380eab8" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b1fc3818070" loc="56:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b1fc3818860" loc="64:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b1fc38bfca0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b1fc38dad60" loc="54:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b1fc38671a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b1fc38dfe60" loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc3b145c0" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b1fc3b09c08" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b1fc3b14020" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3b14330" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1fc3b25a68" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b254a0" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3b257b0" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1fc3b26c58" loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1fc3b12890" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b12620" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1fc3b27cf8" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b27750" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1fc3b27a78" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b1fc3b0b290" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1fc3b0b020" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b1fc3b0a690" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1fc3b0a420" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1fc3b0c510" loc="83:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3b0ba78" loc="109:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b1fc3b07290" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b07020" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b1fc3b1c290" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b1c020" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1fc3b183c0" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b19d98" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3b18108" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1fc3b19508" loc="95:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b1fc3b1b658" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b1b0c8" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3b1b3d8" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b1fc3b21a40" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
              <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b21140" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b1fc3b21468" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3b21778" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b1fc3afe020" loc="50:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b1fc3afe758" loc="56:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b1fc3afd020" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b1fc3afde70" loc="72:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b1fc3b11480" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1fc3b11c18" loc="106:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b1fc3afd738" loc="66:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc3b0f768" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b1fc3b0f4f8" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b1fc3b007e0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b1fc3afc608" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b1fc3afcd20" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc3b818d0" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc3b818d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1fc3b81b00" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3b81b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b1fc3b917d8" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3b81b00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b91568" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b1fc3b8e8b0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b8e640" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b1fc3b92670" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b92400" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc3b8fac8" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3b81b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b8f508" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b1fc3b8f848" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3b81b00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b1fc3b7acc8" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b7aa58" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b1fc3b96020" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b97cb0" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b1fc3b95108" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3b96e28" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b1fc3b853b0" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b85140" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b1fc3b77290" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b77020" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b1fc3b79738" loc="57:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b1fc3b78290" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b78020" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b1fc3b8ca28" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b8c470" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1fc3b8c7a8" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b1fc3b755d8" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b75020" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1fc3b75358" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b1fc3b88020" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b8bcf8" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b1fc3b862a0" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b88ce8" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b1fc3b86020" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1fc3930df8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b1fc3b8abf8" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b8a988" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b1fc3b847b8" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1fc3b84208" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b1fc3b84538" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b1fc3b82560" loc="184:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b1fc3bb5690" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bb5420" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b1fc3bb8a68" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bb87f8" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b1fc3bb9290" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b1fc3bb9020" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b1fc3bbb730" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b1fc3bbb4c0" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b1fc3bb9c48" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b1fc3bb99d8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b1fc3bb68d8" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bb6668" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b1fc3bcd128" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b1fc3bbfb18" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b1fc3bbfe78" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b1fc3ba9d50" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3ba97a8" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b1fc3ba9ad0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b1fc3ba87d8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b1fc2fe8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3ba8568" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b1fc3ba9020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3baec50" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b1fc3ba72d0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3ba7060" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x2b1fc3bb14b8" loc="58:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x2b1fc3bc2ab0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bc2840" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x2b1fc3bc3698" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x2b1fc3bc3428" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x2b1fc3bc87c8" loc="81:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x2b1fc3bc7638" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bc7020" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x2b1fc3bc73b8" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x2b1fc3bb1e70" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2b1fc3bb1c00" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x2b1fc3bc49e0" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bc4400" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x2b1fc3bc4760" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x2b1fc3bc0ab8" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2b1fc3bc0848" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x2b1fc3bc5728" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bc54b8" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x2b1fc3bb4ac0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x2b1fc3bb4850" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b1fc3bd1c40" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bd19d0" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b1fc3bb2dd0" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bb27e8" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b1fc3bb2b50" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b1fc3bd3cd8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bd3a68" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b1fc3bd32a0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bd4b48" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b1fc3bd3020" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b1fc3bcfb70" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bcf900" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b1fc3ba57c8" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3ba5558" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc3bd7020" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bda9b8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3bdacc8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1fc3be92d8" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bebcc8" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3be9020" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1fc3beb4c0" loc="101:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1fc3bd5290" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bd5020" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1fc3bec670" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3bec0c8" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1fc3bec3f0" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b1fc3bf2680" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b1fc3bf20c8" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b1fc3bf2400" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b1fc3bf3178" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b1fc3bf5840" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b1fc3bf5200" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b1fc3bf55c0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b1fc3be1720" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1fc3be14b0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b1fc3bf3980" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b1fc3bf7990" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b1fc3bf7720" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b1fc3bf8780" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b1fc3bf8510" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b1fc3bf18d8" loc="110:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b1fc3bf6a30" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b1fc3bf67c0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b1fc3bf1020" loc="105:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b1fc3bf7020" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b1fc3be8d58" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b1fc3be1e08" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b1fc3bf6110" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b1fc3c06440" loc="50:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b1fc3c05328" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b1fc3c06ba0" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b1fc3beec38" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b1fc3bee680" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1fc392f1e8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b1fc3bee9b8" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1fc392f5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x2b1fc3be5570" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b1fc38f6020"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b1fc38f58a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3be5288" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b1fc3be3748" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b1fc38f33c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b1fc3900b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc3be3460" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc3c6f2a0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3c74c08" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b1fc3c6f020" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1fc3c8a4a0" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b1fc3c87b30" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b1fc3c89d60" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b1fc3c87590" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc3c878a0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1fc3c895c8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b1fc3c89020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1fc3c89348" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b1fc3c6fcb0" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b1fc3c6fa40" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b1fc3c84c80" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b1fc3c844e8" loc="35:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b1fc3c7a9d8" loc="74:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3c721d8" loc="84:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b1fc3c77b28" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b1fc3c75a00" loc="97:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b1fc3c752a8" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b1fc3c793e0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b1fc3c77360" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b1fc3c76360" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b1fc3c76b10" loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b1fc3c79bd8" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b1fc3c7cc78" loc="110:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b1fc3c62d50" loc="87:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b1fc3c62460" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b1fc3c7c518" loc="92:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b1fc3c7b848" loc="118:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b1fc3c98778" loc="71:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b1fc3c7ee38" loc="56:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b1fc3c98020" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b1fc3c7dc98" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b1fc3c7d578" loc="61:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b1fc3c81c70" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b1fc3c81a00" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b1fc3c7e6c0" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b1fc3c7e450" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b1fc3cec2a0" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b1fc3cec2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b1fc3cecad8" loc="55:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b1fc3ceb7c8" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b1fc3cec2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b1fc3ceb248" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b1fc3ceb548" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b1fc3cec2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b1fc3d03418" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc3d031a8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1fc3d03e70" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc3d03c00" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc3cdf0f0" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc3cdf0f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1fc3cdf320" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b1fc3cf8bd8" loc="98:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1fc3cfad78" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b1fc3cf82a0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1fc3cf9cc8" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b1fc3cf8020" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b1fc3cf9518" loc="77:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b1fc3cf73a0" loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1fc3cdfde0" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1fc3cdfb70" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3cdf320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3cfa628" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b1fc3cffb40" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b1fc3d06358" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b1fc3d08560" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b1fc3d08d68" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc3d060c8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1fc3d059a8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b1fc3d06ba8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b1fc3d053e8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc3d05718" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b1fc3d0a0d8" loc="57:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b1fc3ced958" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b1fc3ced258" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b1fc3cf0980" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b1fc3da6378" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38bb020"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b1fc38bb428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b1fc3da8020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a8918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b1fc38a8d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1fc3daacf8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a8918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b1fc38a8d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b1fc3da71d8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38b3b60"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b1fc38b2020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b1fc3daeab0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3898528"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b1fc3898930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b1fc3da7b98" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38b3b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b1fc38b2020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b1fc3da7928" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38b3b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b1fc38b2020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b1fc3da6d38" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38bb020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b1fc38bb428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b1fc3da6ac8" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38bb020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b1fc38bb428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b1fc3dabad8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a6d50"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b1fc38a4188"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b1fc3dab328" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a8918"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b1fc38a8d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b1fc3daa570" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3898528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b1fc3898930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1fc3daa300" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3898528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b1fc3898930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b1fc3da89f0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a6d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b1fc38a4188"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1fc3da8780" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc38a6d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b1fc38a4188"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b1fc3dacb60" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b1fc3dbd648" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b1fc3dbd3d8" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b1fc3dbf568" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1fc3dc2438" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b1fc3dc1748" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1fc3dc14d8" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1fc3dc0020" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1fc3dbfcb8" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc3dc2d70" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1fc3dc2b00" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dacb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1fc3dc0718" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3dc0e00" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b1fc3dba820" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dba820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b1fc3db4e20" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1fc3db61d8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1fc3db7110" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dba820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1fc3db68e0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1fc3dd35c0" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc3db7a58" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dba820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1fc3db77e8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3dba820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1fc3db4020" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3db4708" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b1fc3d99418" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3d99418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b1fc3d94900" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b1fc3d95a40" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1fc3d99cb8" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3d99418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b1fc3db2290" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b1fc3db2020" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b1fc3db2a10" loc="101:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1fc3d964c0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b1fc3d98d50" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1fc3d941d8" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc3d98630" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3d99418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1fc3d983c0" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1fc3d99418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1fc3d96bb8" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc3d95328" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b1fc3dc47c8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3890450"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b1fc3890858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b1fc3de2c10" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3892848"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b1fc3892c50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b1fc3de3a38" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3894128"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b1fc3894530"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b1fc3de2470" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3894128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b1fc3894530"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b1fc3de2200" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3894128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b1fc3894530"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b1fc3de15f8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3892848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b1fc3892c50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b1fc3de1388" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3892848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b1fc3892c50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b1fc3de3290" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3890450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b1fc3890858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1fc3de3020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc3890450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b1fc3890858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b1fc3dd8020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b1fc3dd87e0" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b1fc3dd97f0" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b1fc3dd7020" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b1fc3ddb550" loc="21:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc388c9b8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b1fc388cdc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b1fc3dd9020" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc388c9b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b1fc388cdc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b1fc3ddbc90" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1fc388c9b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b1fc388cdc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc3f3d3f8" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc3f3d3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1fc3f3d628" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3f3d628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1fc3f3c020" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1fc3f3d628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b1fc3f3b070" loc="65:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b1fc3f3c838" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b1fc3f3b760" loc="71:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b1fc3fd8a40" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b1fc3fd6ae0" loc="55:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b1fc3fd63a8" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b1fc3fd6138" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b1fc3fd8258" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b1fc4008860" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1fc40051d8" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b1fc4008178" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b1fc40069f0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b1fc4006780" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b1fc400ba48" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b1fc4006020" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b1fc4014070" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b1fc40b15d0" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc40b1020" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc40b1350" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b1fc40ac618" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc40adce8" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc40ac060" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1fc40ac388" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1fc40ad020" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc40af9b0" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc40afce0" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b1fc40b32a0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b1fc2fddb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc40b4c38" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc40b3020" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b1fc40b0c30" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc40b0348" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1fc40b0678" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1fc40b09a0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b1fc40a0020" loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b1fc40a0800" loc="31:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b1fc409f020" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc40bf930" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b1fc40bf020" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b1fc40bf380" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc40bf6a0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1fc40becc8" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b1fc40be060" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b1fc40be3c0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc40be6e0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1fc40bea28" loc="72:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b1fc40c39a0" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b1fc40c3730" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b1fc4160760" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b1fc4185020" loc="109:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b1fc415bb98" loc="100:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b1fc41859c8" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b1fc4185758" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b1fc4160020" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b1fc4158640" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b1fc41583d0" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b1fc415c3f8" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b1fc415c188" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b1fc415f610" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b1fc4180290" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b1fc4180020" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b1fc415cb30" loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b1fc4184a30" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b1fc41847c0" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b1fc41828f0" loc="120:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b1fc4157838" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b1fc41575c8" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b1fc41817d0" loc="124:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b1fc415a588" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b1fc415a318" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1fc415e020" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc415fcf8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b1fc415b498" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b1fc415b228" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b1fc4158e50" loc="106:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b1fc4184110" loc="112:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b1fc4182178" loc="115:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b1fc4181070" loc="122:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b1fc415aca0" loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b1fc4160e78" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b1fc415e9a8" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc415e738" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b1fc417a178" loc="80:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b1fc417a968" loc="88:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b1fc41bc020" loc="74:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc41bc7f8" loc="84:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b1fc422f7d0" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b1fc422e0d8" loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b1fc422a020" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b1fc422b6f8" loc="49:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b1fc4221c80" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1fc4228020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1fc4221a10" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1fc4228020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b1fc4227e10" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b1fc42238f0" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1fc4228020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1fc4223680" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1fc4228020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b1fc42211d8" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b1fc4228020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b1fc4331020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b1fc435cac0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b1fc435c170" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b1fc435c840" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b1fc435da00" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b1fc435d290" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b1fc435d020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b1fc4337020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc4338ca8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b1fc4338020" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc433cd28" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1fc436a020" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc4336c88" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1fc4336020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc4337c78" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc4499be0" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc4499be0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1fc44964c8" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1fc44fc338" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1fc44fc338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b1fc44f4020" loc="125:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1fc44f9710" loc="72:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b1fc44f75b8" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1fc44f7020" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b1fc44f7338" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b1fc44f87b8" loc="87:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b1fc44f3020" loc="140:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b1fc44f4740" loc="133:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b1fc44f8020" loc="81:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b1fc44fce08" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1fc44fcb98" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b1fc44f65b8" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1fc44f6020" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b1fc44f6338" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b1fc44fb8a0" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1fc44fb630" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1fc2feadb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1fc44f9070" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b1fc46572f8" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1fc46572f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b1fc4657da0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1fc46572f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b1fc4657b30" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1fc46572f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b1fc47e9640" loc="31:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc47e9060" loc="31:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b1fc47e93c0" loc="31:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b1fc47ed948" loc="15:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b1fc47ea760" loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1fc47ea198" loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1fc393ea20"/>
                <typename><typedef-ref name="message_t" ref="0x2b1fc393b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b1fc47ea4e0" loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b1fc481ab60" loc="43:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b1fc481a450" loc="38:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b1fc48221d8" loc="45:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b1fc4820528" loc="61:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b1fc481e020" loc="83:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc481fd60" loc="83:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b1fc4820d40" loc="68:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b1fc4822cc8" loc="54:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc4822a58" loc="54:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b1fc481e818" loc="89:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b1fc481f5b8" loc="74:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b1fc4829020" loc="60:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b1fc48298d8" loc="70:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b1fc482a6c8" loc="51:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b1fc482a458" loc="51:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b1fc4827430" loc="80:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1fc48271c0" loc="80:/opt/tinyos-2.1.0/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b1fc4825020" loc="51:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b1fc4825bc8" loc="58:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc4825958" loc="58:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b1fc4824640" loc="69:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b1fc48243d0" loc="69:/opt/tinyos-2.1.0/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc49102a0" loc="48:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1fc4913c28" loc="48:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc4910020" loc="48:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b1fc490dc28" loc="79:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1fc490d9b8" loc="79:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b1fc4959988" loc="90:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1fc49593e8" loc="90:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc4959708" loc="90:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b1fc495a948" loc="65:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b1fc49572b0" loc="99:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1fc4956898" loc="99:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc4956bb8" loc="99:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1fc4957020" loc="99:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b1fc490d258" loc="72:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1fc490fa18" loc="57:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1fc490f140" loc="57:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1fc490f460" loc="57:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1fc2fea378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1fc490f788" loc="57:/opt/tinyos-2.1.0/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1fc4937020" loc="46:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1fc493bd48" loc="46:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b1fc4937dc8" loc="56:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1fc4937810" loc="56:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b1fc4937b48" loc="56:/opt/tinyos-2.1.0/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b1fc4973938" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b1fc4974af8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b1fc496f020" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc4970d40" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b1fc4970020" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b1fc4977ca0" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b1fc49743e0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b1fc4973258" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1fc3812ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b1fc4971070" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1fc38094c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b1fc4971928" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1fc49716b8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b1fc49706d0" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1fc2fe8910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
